{"ast":null,"code":"import\"antd/es/input/style/css\";import _Input from\"antd/es/input\";import _slicedToArray from\"/var/www/html/ami-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import{compose,withProps}from'recompose';import{withScriptjs}from'react-google-maps';import StandaloneSearchBox from'react-google-maps/lib/components/places/StandaloneSearchBox';const SearchInput=compose(withProps({googleMapURL:process.env.REACT_APP_GOOGLE_MAP_API_KEY,loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:'100%'}}),containerElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"400px\"}})}),withScriptjs)(props=>{const getinputvalue=props.getinputvalue;const _useState=useState({searchedLocation:'',searchedPlaceAPIData:[]}),_useState2=_slicedToArray(_useState,2),locationInput=_useState2[0],setLocationInput=_useState2[1];const handleOnChange=event=>{if(event.which==='13'){event.preventDefault();event.stopPropagation();}setLocationInput({searchedLocation:event.target.value});};const refs=useRef({});const onPlacesChanged=()=>{const places=refs.current.getPlaces();setLocationInput({searchedLocation:places&&places[0]&&places[0].formatted_address,searchedPlaceAPIData:places?places:[]});getinputvalue({searchedLocation:places&&places[0]&&places[0].formatted_address,searchedPlaceAPIData:places?places:[]});};const handleOnPressEnter=event=>{if(event.which==='13'){event.preventDefault();event.stopPropagation();}setLocationInput({searchedLocation:event.target.value});getinputvalue(locationInput);};return/*#__PURE__*/React.createElement(\"div\",{className:\"map_autocomplete\"},/*#__PURE__*/React.createElement(StandaloneSearchBox,{ref:refs,onPlacesChanged:onPlacesChanged},/*#__PURE__*/React.createElement(_Input,{type:\"text\",defaultValue:\"\",value:locationInput.searchedLocation||'',placeholder:\"Search \\u201CThailand, Asia\\u201D\",size:\"large\",onChange:handleOnChange,onPressEnter:handleOnPressEnter})));});const MapAutoComplete=props=>{const updatevalue=props.updatevalue;return/*#__PURE__*/React.createElement(SearchInput,{getinputvalue:updatevalue});};export default MapAutoComplete;","map":{"version":3,"sources":["/var/www/html/ami-travel/src/components/Map/MapAutoComplete.js"],"names":["React","useState","useRef","compose","withProps","withScriptjs","StandaloneSearchBox","SearchInput","googleMapURL","process","env","REACT_APP_GOOGLE_MAP_API_KEY","loadingElement","height","containerElement","props","getinputvalue","searchedLocation","searchedPlaceAPIData","locationInput","setLocationInput","handleOnChange","event","which","preventDefault","stopPropagation","target","value","refs","onPlacesChanged","places","current","getPlaces","formatted_address","handleOnPressEnter","MapAutoComplete","updatevalue"],"mappings":"iNAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,KAAwC,OAAxC,CACA,OAASC,OAAT,CAAkBC,SAAlB,KAAmC,WAAnC,CACA,OAASC,YAAT,KAA6B,mBAA7B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,6DAAhC,CAGA,KAAMC,CAAAA,WAAW,CAAGJ,OAAO,CACzBC,SAAS,CAAC,CACRI,YAAY,CAAEC,OAAO,CAACC,GAAR,CAAYC,4BADlB,CAERC,cAAc,cAAE,2BAAK,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAV,CAAZ,EAFR,CAGRC,gBAAgB,cAAE,2BAAK,KAAK,CAAE,CAAED,MAAM,QAAR,CAAZ,EAHV,CAAD,CADgB,CAMzBR,YANyB,CAAP,CAOjBU,KAAD,EAAW,MACHC,CAAAA,aADG,CACeD,KADf,CACHC,aADG,iBAE+Bf,QAAQ,CAAC,CACjDgB,gBAAgB,CAAE,EAD+B,CAEjDC,oBAAoB,CAAE,EAF2B,CAAD,CAFvC,wCAEJC,aAFI,eAEWC,gBAFX,eAMX,KAAMC,CAAAA,cAAc,CAAIC,KAAD,EAAW,CAChC,GAAIA,KAAK,CAACC,KAAN,GAAgB,IAApB,CAA0B,CACxBD,KAAK,CAACE,cAAN,GACAF,KAAK,CAACG,eAAN,GACD,CACDL,gBAAgB,CAAC,CACfH,gBAAgB,CAAEK,KAAK,CAACI,MAAN,CAAaC,KADhB,CAAD,CAAhB,CAGD,CARD,CASA,KAAMC,CAAAA,IAAI,CAAG1B,MAAM,CAAC,EAAD,CAAnB,CACA,KAAM2B,CAAAA,eAAe,CAAG,IAAM,CAC5B,KAAMC,CAAAA,MAAM,CAAGF,IAAI,CAACG,OAAL,CAAaC,SAAb,EAAf,CACAZ,gBAAgB,CAAC,CACfH,gBAAgB,CAAEa,MAAM,EAAIA,MAAM,CAAC,CAAD,CAAhB,EAAuBA,MAAM,CAAC,CAAD,CAAN,CAAUG,iBADpC,CAEff,oBAAoB,CAAEY,MAAM,CAAGA,MAAH,CAAY,EAFzB,CAAD,CAAhB,CAIAd,aAAa,CAAC,CACZC,gBAAgB,CAAEa,MAAM,EAAIA,MAAM,CAAC,CAAD,CAAhB,EAAuBA,MAAM,CAAC,CAAD,CAAN,CAAUG,iBADvC,CAEZf,oBAAoB,CAAEY,MAAM,CAAGA,MAAH,CAAY,EAF5B,CAAD,CAAb,CAID,CAVD,CAYA,KAAMI,CAAAA,kBAAkB,CAAIZ,KAAD,EAAW,CACpC,GAAIA,KAAK,CAACC,KAAN,GAAgB,IAApB,CAA0B,CACxBD,KAAK,CAACE,cAAN,GACAF,KAAK,CAACG,eAAN,GACD,CACDL,gBAAgB,CAAC,CAAEH,gBAAgB,CAAEK,KAAK,CAACI,MAAN,CAAaC,KAAjC,CAAD,CAAhB,CACAX,aAAa,CAACG,aAAD,CAAb,CACD,CAPD,CASA,mBACE,2BAAK,SAAS,CAAC,kBAAf,eACE,oBAAC,mBAAD,EAAqB,GAAG,CAAES,IAA1B,CAAgC,eAAe,CAAEC,eAAjD,eACE,4BACE,IAAI,CAAC,MADP,CAEE,YAAY,CAAC,EAFf,CAGE,KAAK,CAAEV,aAAa,CAACF,gBAAd,EAAkC,EAH3C,CAIE,WAAW,CAAC,mCAJd,CAKE,IAAI,CAAC,OALP,CAME,QAAQ,CAAEI,cANZ,CAOE,YAAY,CAAEa,kBAPhB,EADF,CADF,CADF,CAeD,CA3DmB,CAApB,CA6DA,KAAMC,CAAAA,eAAe,CAAIpB,KAAD,EAAW,MACzBqB,CAAAA,WADyB,CACTrB,KADS,CACzBqB,WADyB,CAEjC,mBAAO,oBAAC,WAAD,EAAa,aAAa,CAAEA,WAA5B,EAAP,CACD,CAHD,CAKA,cAAeD,CAAAA,eAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { compose, withProps } from 'recompose';\nimport { withScriptjs } from 'react-google-maps';\nimport StandaloneSearchBox from 'react-google-maps/lib/components/places/StandaloneSearchBox';\nimport { Input } from 'antd';\n\nconst SearchInput = compose(\n  withProps({\n    googleMapURL: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\n    loadingElement: <div style={{ height: '100%' }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n  }),\n  withScriptjs\n)((props) => {\n  const { getinputvalue } = props;\n  const [locationInput, setLocationInput] = useState({\n    searchedLocation: '',\n    searchedPlaceAPIData: [],\n  });\n  const handleOnChange = (event) => {\n    if (event.which === '13') {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setLocationInput({\n      searchedLocation: event.target.value,\n    });\n  };\n  const refs = useRef({});\n  const onPlacesChanged = () => {\n    const places = refs.current.getPlaces();\n    setLocationInput({\n      searchedLocation: places && places[0] && places[0].formatted_address,\n      searchedPlaceAPIData: places ? places : [],\n    });\n    getinputvalue({\n      searchedLocation: places && places[0] && places[0].formatted_address,\n      searchedPlaceAPIData: places ? places : [],\n    });\n  };\n\n  const handleOnPressEnter = (event) => {\n    if (event.which === '13') {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setLocationInput({ searchedLocation: event.target.value });\n    getinputvalue(locationInput);\n  };\n\n  return (\n    <div className=\"map_autocomplete\">\n      <StandaloneSearchBox ref={refs} onPlacesChanged={onPlacesChanged}>\n        <Input\n          type=\"text\"\n          defaultValue=\"\"\n          value={locationInput.searchedLocation || ''}\n          placeholder=\"Search “Thailand, Asia”\"\n          size=\"large\"\n          onChange={handleOnChange}\n          onPressEnter={handleOnPressEnter}\n        />\n      </StandaloneSearchBox>\n    </div>\n  );\n});\n\nconst MapAutoComplete = (props) => {\n  const { updatevalue } = props;\n  return <SearchInput getinputvalue={updatevalue} />;\n};\n\nexport default MapAutoComplete;\n"]},"metadata":{},"sourceType":"module"}