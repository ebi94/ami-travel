{"ast":null,"code":"import _slicedToArray from\"/var/www/html/ami-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment}from'react';import Sticky from'react-stickynode';import Toolbar from'components/UI/Toolbar/Toolbar';import CategotySearch from'components/Search/CategorySearch/CategotySearch';import{PostPlaceholder}from'components/UI/ContentLoader/ContentLoader';import SectionGrid from'components/SectionGrid/SectionGrid';import ListingMap from'./ListingMap';import FilterDrawer from'components/Search/MobileSearchView';import useWindowSize from'library/hooks/useWindowSize';import useDataApi from'library/hooks/useDataApi';import{SINGLE_POST_PAGE}from'settings/constant';import ListingWrapper,{PostsWrapper,ShowMapCheckbox}from'./Listing.style';export default function Listing({location,history}){let url='/data/hotel.json';const _useWindowSize=useWindowSize(),width=_useWindowSize.width;const _useState=useState(false),_useState2=_slicedToArray(_useState,2),showMap=_useState2[0],setShowMap=_useState2[1];const _useDataApi=useDataApi(url),data=_useDataApi.data,loading=_useDataApi.loading,loadMoreData=_useDataApi.loadMoreData,total=_useDataApi.total,limit=_useDataApi.limit;let columnWidth=[1/1,1/2,1/3,1/4,1/5];if(location.search){url+=location.search;}if(showMap){columnWidth=[1/1,1/2,1/2,1/2,1/3];}const handleMapToggle=()=>{setShowMap(showMap=>!showMap);};return/*#__PURE__*/React.createElement(ListingWrapper,null,/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(PostsWrapper,{className:width>767&&showMap?'col-12':'col-24'},/*#__PURE__*/React.createElement(SectionGrid,{link:SINGLE_POST_PAGE,columnWidth:columnWidth,data:data,totalItem:total.length,loading:loading,limit:limit,handleLoadMore:loadMoreData,placeholder:/*#__PURE__*/React.createElement(PostPlaceholder,null)})),showMap&&/*#__PURE__*/React.createElement(ListingMap,null)));}","map":{"version":3,"sources":["/var/www/html/ami-travel/src/container/Listing/Listing.js"],"names":["React","useState","Fragment","Sticky","Toolbar","CategotySearch","PostPlaceholder","SectionGrid","ListingMap","FilterDrawer","useWindowSize","useDataApi","SINGLE_POST_PAGE","ListingWrapper","PostsWrapper","ShowMapCheckbox","Listing","location","history","url","width","showMap","setShowMap","data","loading","loadMoreData","total","limit","columnWidth","search","handleMapToggle","length"],"mappings":"+IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,KAA0C,OAA1C,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,+BAApB,CAEA,MAAOC,CAAAA,cAAP,KAA2B,iDAA3B,CACA,OAASC,eAAT,KAAgC,2CAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,oCAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,oCAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,OAASC,gBAAT,KAAiC,mBAAjC,CACA,MAAOC,CAAAA,cAAP,EAAyBC,YAAzB,CAAuCC,eAAvC,KAA8D,iBAA9D,CAEA,cAAe,SAASC,CAAAA,OAAT,CAAiB,CAAEC,QAAF,CAAYC,OAAZ,CAAjB,CAAwC,CACrD,GAAIC,CAAAA,GAAG,CAAG,kBAAV,CADqD,qBAEnCT,aAAa,EAFsB,CAE7CU,KAF6C,gBAE7CA,KAF6C,iBAGvBnB,QAAQ,CAAC,KAAD,CAHe,wCAG9CoB,OAH8C,eAGrCC,UAHqC,iCAICX,UAAU,CAACQ,GAAD,CAJX,CAI7CI,IAJ6C,aAI7CA,IAJ6C,CAIvCC,OAJuC,aAIvCA,OAJuC,CAI9BC,YAJ8B,aAI9BA,YAJ8B,CAIhBC,KAJgB,aAIhBA,KAJgB,CAITC,KAJS,aAITA,KAJS,CAKrD,GAAIC,CAAAA,WAAW,CAAG,CAAC,EAAI,CAAL,CAAQ,EAAI,CAAZ,CAAe,EAAI,CAAnB,CAAsB,EAAI,CAA1B,CAA6B,EAAI,CAAjC,CAAlB,CACA,GAAIX,QAAQ,CAACY,MAAb,CAAqB,CACnBV,GAAG,EAAIF,QAAQ,CAACY,MAAhB,CACD,CACD,GAAIR,OAAJ,CAAa,CACXO,WAAW,CAAG,CAAC,EAAI,CAAL,CAAQ,EAAI,CAAZ,CAAe,EAAI,CAAnB,CAAsB,EAAI,CAA1B,CAA6B,EAAI,CAAjC,CAAd,CACD,CACD,KAAME,CAAAA,eAAe,CAAG,IAAM,CAC5BR,UAAU,CAAED,OAAD,EAAa,CAACA,OAAf,CAAV,CACD,CAFD,CAIA,mBACE,oBAAC,cAAD,mBAoBE,oBAAC,QAAD,mBACE,oBAAC,YAAD,EAAc,SAAS,CAAED,KAAK,CAAG,GAAR,EAAeC,OAAf,CAAyB,QAAzB,CAAoC,QAA7D,eACE,oBAAC,WAAD,EACE,IAAI,CAAET,gBADR,CAEE,WAAW,CAAEgB,WAFf,CAGE,IAAI,CAAEL,IAHR,CAIE,SAAS,CAAEG,KAAK,CAACK,MAJnB,CAKE,OAAO,CAAEP,OALX,CAME,KAAK,CAAEG,KANT,CAOE,cAAc,CAAEF,YAPlB,CAQE,WAAW,cAAE,oBAAC,eAAD,MARf,EADF,CADF,CAcGJ,OAAO,eAAI,oBAAC,UAAD,MAdd,CApBF,CADF,CAuCD","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport Sticky from 'react-stickynode';\nimport Toolbar from 'components/UI/Toolbar/Toolbar';\nimport { Checkbox } from 'antd';\nimport CategotySearch from 'components/Search/CategorySearch/CategotySearch';\nimport { PostPlaceholder } from 'components/UI/ContentLoader/ContentLoader';\nimport SectionGrid from 'components/SectionGrid/SectionGrid';\nimport ListingMap from './ListingMap';\nimport FilterDrawer from 'components/Search/MobileSearchView';\nimport useWindowSize from 'library/hooks/useWindowSize';\nimport useDataApi from 'library/hooks/useDataApi';\nimport { SINGLE_POST_PAGE } from 'settings/constant';\nimport ListingWrapper, { PostsWrapper, ShowMapCheckbox } from './Listing.style';\n\nexport default function Listing({ location, history }) {\n  let url = '/data/hotel.json';\n  const { width } = useWindowSize();\n  const [showMap, setShowMap] = useState(false);\n  const { data, loading, loadMoreData, total, limit } = useDataApi(url);\n  let columnWidth = [1 / 1, 1 / 2, 1 / 3, 1 / 4, 1 / 5];\n  if (location.search) {\n    url += location.search;\n  }\n  if (showMap) {\n    columnWidth = [1 / 1, 1 / 2, 1 / 2, 1 / 2, 1 / 3];\n  }\n  const handleMapToggle = () => {\n    setShowMap((showMap) => !showMap);\n  };\n\n  return (\n    <ListingWrapper>\n      {/* <Sticky top={82} innerZ={999} activeClass=\"isHeaderSticky\">\n        <Toolbar\n          left={\n            width > 991 ? (\n              <CategotySearch history={history} location={location} />\n            ) : (\n              <FilterDrawer history={history} location={location} />\n            )\n          }\n          right={\n            <ShowMapCheckbox>\n              <Checkbox defaultChecked={false} onChange={handleMapToggle}>\n                Show map\n              </Checkbox>\n            </ShowMapCheckbox>\n          }\n        />\n      </Sticky> */}\n\n      <Fragment>\n        <PostsWrapper className={width > 767 && showMap ? 'col-12' : 'col-24'}>\n          <SectionGrid\n            link={SINGLE_POST_PAGE}\n            columnWidth={columnWidth}\n            data={data}\n            totalItem={total.length}\n            loading={loading}\n            limit={limit}\n            handleLoadMore={loadMoreData}\n            placeholder={<PostPlaceholder />}\n          />\n        </PostsWrapper>\n\n        {showMap && <ListingMap />}\n      </Fragment>\n    </ListingWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}