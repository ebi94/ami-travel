{"ast":null,"code":"import React from'react';import GridCardWrapper,{ImageWrapper,FavoriteIcon,ContentWrapper,LocationArea,TitleArea,PriceArea,RatingArea,MetaWrapper,ButtonGroup}from'./GridCard.style';const GridCard=({className,favorite,location,title,price,rating,editBtn,viewDetailsBtn,children})=>{let classes=viewDetailsBtn||editBtn?\"has_btn \".concat(className):className;return/*#__PURE__*/React.createElement(GridCardWrapper,{className:\"grid_card \".concat(classes).trim()},/*#__PURE__*/React.createElement(ImageWrapper,{className:\"media_wrapper\"},children),/*#__PURE__*/React.createElement(ContentWrapper,{className:\"content_wrapper\"},location&&/*#__PURE__*/React.createElement(LocationArea,null,location),title&&/*#__PURE__*/React.createElement(TitleArea,null,title),/*#__PURE__*/React.createElement(MetaWrapper,{className:\"meta_wrapper\"},price&&/*#__PURE__*/React.createElement(PriceArea,{className:\"price\"},price),rating&&/*#__PURE__*/React.createElement(RatingArea,{className:\"rating\"},rating),viewDetailsBtn||editBtn?/*#__PURE__*/React.createElement(ButtonGroup,{className:\"button_group\"},viewDetailsBtn,editBtn):null)),favorite&&/*#__PURE__*/React.createElement(FavoriteIcon,null,favorite));};export default GridCard;","map":{"version":3,"sources":["/var/www/html/ami-travel/src/components/GridCard/GridCard.js"],"names":["React","GridCardWrapper","ImageWrapper","FavoriteIcon","ContentWrapper","LocationArea","TitleArea","PriceArea","RatingArea","MetaWrapper","ButtonGroup","GridCard","className","favorite","location","title","price","rating","editBtn","viewDetailsBtn","children","classes","trim"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,eAAP,EACEC,YADF,CAEEC,YAFF,CAGEC,cAHF,CAIEC,YAJF,CAKEC,SALF,CAMEC,SANF,CAOEC,UAPF,CAQEC,WARF,CASEC,WATF,KAUO,kBAVP,CAYA,KAAMC,CAAAA,QAAQ,CAAG,CAAC,CAChBC,SADgB,CAEhBC,QAFgB,CAGhBC,QAHgB,CAIhBC,KAJgB,CAKhBC,KALgB,CAMhBC,MANgB,CAOhBC,OAPgB,CAQhBC,cARgB,CAShBC,QATgB,CAAD,GAUX,CACJ,GAAIC,CAAAA,OAAO,CAAGF,cAAc,EAAID,OAAlB,mBAAuCN,SAAvC,EAAqDA,SAAnE,CACA,mBACE,oBAAC,eAAD,EAAiB,SAAS,CAAE,oBAAaS,OAAb,EAAuBC,IAAvB,EAA5B,eACE,oBAAC,YAAD,EAAc,SAAS,CAAC,eAAxB,EAAyCF,QAAzC,CADF,cAEE,oBAAC,cAAD,EAAgB,SAAS,CAAC,iBAA1B,EACGN,QAAQ,eAAI,oBAAC,YAAD,MAAeA,QAAf,CADf,CAEGC,KAAK,eAAI,oBAAC,SAAD,MAAYA,KAAZ,CAFZ,cAGE,oBAAC,WAAD,EAAa,SAAS,CAAC,cAAvB,EACGC,KAAK,eAAI,oBAAC,SAAD,EAAW,SAAS,CAAC,OAArB,EAA8BA,KAA9B,CADZ,CAEGC,MAAM,eAAI,oBAAC,UAAD,EAAY,SAAS,CAAC,QAAtB,EAAgCA,MAAhC,CAFb,CAGGE,cAAc,EAAID,OAAlB,cACC,oBAAC,WAAD,EAAa,SAAS,CAAC,cAAvB,EACGC,cADH,CAEGD,OAFH,CADD,CAKG,IARN,CAHF,CAFF,CAiBGL,QAAQ,eAAI,oBAAC,YAAD,MAAeA,QAAf,CAjBf,CADF,CAqBD,CAjCD,CA6CA,cAAeF,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport GridCardWrapper, {\n  ImageWrapper,\n  FavoriteIcon,\n  ContentWrapper,\n  LocationArea,\n  TitleArea,\n  PriceArea,\n  RatingArea,\n  MetaWrapper,\n  ButtonGroup,\n} from './GridCard.style';\n\nconst GridCard = ({\n  className,\n  favorite,\n  location,\n  title,\n  price,\n  rating,\n  editBtn,\n  viewDetailsBtn,\n  children,\n}) => {\n  let classes = viewDetailsBtn || editBtn ? `has_btn ${className}` : className;\n  return (\n    <GridCardWrapper className={`grid_card ${classes}`.trim()}>\n      <ImageWrapper className=\"media_wrapper\">{children}</ImageWrapper>\n      <ContentWrapper className=\"content_wrapper\">\n        {location && <LocationArea>{location}</LocationArea>}\n        {title && <TitleArea>{title}</TitleArea>}\n        <MetaWrapper className=\"meta_wrapper\">\n          {price && <PriceArea className=\"price\">{price}</PriceArea>}\n          {rating && <RatingArea className=\"rating\">{rating}</RatingArea>}\n          {viewDetailsBtn || editBtn ? (\n            <ButtonGroup className=\"button_group\">\n              {viewDetailsBtn}\n              {editBtn}\n            </ButtonGroup>\n          ) : null}\n        </MetaWrapper>\n      </ContentWrapper>\n\n      {favorite && <FavoriteIcon>{favorite}</FavoriteIcon>}\n    </GridCardWrapper>\n  );\n};\n\nGridCard.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  price: PropTypes.string,\n  rating: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  location: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  editBtn: PropTypes.element,\n  viewDetailsBtn: PropTypes.element,\n};\n\nexport default GridCard;\n"]},"metadata":{},"sourceType":"module"}