{"ast":null,"code":"import\"antd/es/button/style/css\";import _Button from\"antd/es/button\";import _objectSpread from\"/var/www/html/ami/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/var/www/html/ami/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{withRouter}from'react-router-dom';import isEmpty from'lodash/isEmpty';import{FaMapMarkerAlt,FaRegCalendar,FaUserFriends}from'react-icons/fa';import DateRangePickerBox from'components/UI/DatePicker/ReactDates';import MapAutoComplete from'components/Map/MapAutoComplete';import MapDropdown from'components/Map/MapDropdown';import{mapDataHelper}from'components/Map/mapDataHelper';import ViewWithPopup from'components/UI/ViewWithPopup/ViewWithPopup';import InputIncDec from'components/UI/InputIncDec/InputIncDec';import{setStateToUrl}from'library/helpers/url_handler';import{LISTING_POSTS_PAGE}from'settings/constant';import{FormWrapper,ComponentWrapper,RoomGuestWrapper,ItemWrapper}from'./Search.style';const calendarItem={separator:'-',format:'MM-DD-YYYY',locale:'en'};const SearchForm=({history})=>{const _useState=useState({setStartDate:null,setEndDate:null}),_useState2=_slicedToArray(_useState,2),searchDate=_useState2[0],setSearchDate=_useState2[1];const _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),mapValue=_useState4[0],setMapValue=_useState4[1];// Room guest state\nconst _useState5=useState({room:0,guest:0}),_useState6=_slicedToArray(_useState5,2),roomGuest=_useState6[0],setRoomGuest=_useState6[1];const updatevalueFunc=event=>{const searchedPlaceAPIData=event.searchedPlaceAPIData;if(!isEmpty(searchedPlaceAPIData)){setMapValue(searchedPlaceAPIData);}};// Room Guest data handling\nconst handleIncrement=type=>{setRoomGuest(_objectSpread(_objectSpread({},roomGuest),{},{[type]:roomGuest[type]+1}));};const handleDecrement=type=>{if(roomGuest[type]<=0){return false;}setRoomGuest(_objectSpread(_objectSpread({},roomGuest),{},{[type]:roomGuest[type]-1}));};const handleIncDecOnChnage=(e,type)=>{let currentValue=e.target.value;setRoomGuest(_objectSpread(_objectSpread({},roomGuest),{},{[type]:currentValue}));};const goToSearchPage=()=>{let tempLocation=[];const mapData=mapValue?mapDataHelper(mapValue):[];mapData&&mapData.map((singleMapData,i)=>{return tempLocation.push({formattedAddress:singleMapData?singleMapData.formattedAddress:'',lat:singleMapData?singleMapData.lat.toFixed(3):null,lng:singleMapData?singleMapData.lng.toFixed(3):null});});const location=tempLocation?tempLocation[0]:{};const query={date_range:searchDate,room:roomGuest.room,guest:roomGuest.guest,location};const search=setStateToUrl(query);history.push({pathname:LISTING_POSTS_PAGE,search:search});};return/*#__PURE__*/React.createElement(FormWrapper,null,/*#__PURE__*/React.createElement(ComponentWrapper,null,/*#__PURE__*/React.createElement(FaMapMarkerAlt,{className:\"map-marker\"}),/*#__PURE__*/React.createElement(MapDropdown,null)),/*#__PURE__*/React.createElement(ComponentWrapper,null,/*#__PURE__*/React.createElement(FaRegCalendar,{className:\"calendar\"}),/*#__PURE__*/React.createElement(DateRangePickerBox,{item:calendarItem,startDateId:\"startDateId-id-home\",endDateId:\"endDateId-id-home\",updateSearchData:setDateValue=>setSearchDate(setDateValue),showClearDates:true,small:true,numberOfMonths:1})),/*#__PURE__*/React.createElement(_Button,{type:\"primary\",htmlType:\"submit\",size:\"large\",onClick:goToSearchPage},\"Find\"));};export default withRouter(SearchForm);","map":{"version":3,"sources":["/var/www/html/ami/src/container/Home/Search/SearchForm.js"],"names":["React","useState","withRouter","isEmpty","FaMapMarkerAlt","FaRegCalendar","FaUserFriends","DateRangePickerBox","MapAutoComplete","MapDropdown","mapDataHelper","ViewWithPopup","InputIncDec","setStateToUrl","LISTING_POSTS_PAGE","FormWrapper","ComponentWrapper","RoomGuestWrapper","ItemWrapper","calendarItem","separator","format","locale","SearchForm","history","setStartDate","setEndDate","searchDate","setSearchDate","mapValue","setMapValue","room","guest","roomGuest","setRoomGuest","updatevalueFunc","event","searchedPlaceAPIData","handleIncrement","type","handleDecrement","handleIncDecOnChnage","e","currentValue","target","value","goToSearchPage","tempLocation","mapData","map","singleMapData","i","push","formattedAddress","lat","toFixed","lng","location","query","date_range","search","pathname","setDateValue"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport isEmpty from 'lodash/isEmpty';\nimport { FaMapMarkerAlt, FaRegCalendar, FaUserFriends } from 'react-icons/fa';\nimport { Button } from 'antd';\nimport DateRangePickerBox from 'components/UI/DatePicker/ReactDates';\nimport MapAutoComplete from 'components/Map/MapAutoComplete';\nimport MapDropdown from 'components/Map/MapDropdown'\nimport { mapDataHelper } from 'components/Map/mapDataHelper';\nimport ViewWithPopup from 'components/UI/ViewWithPopup/ViewWithPopup';\nimport InputIncDec from 'components/UI/InputIncDec/InputIncDec';\nimport { setStateToUrl } from 'library/helpers/url_handler';\nimport { LISTING_POSTS_PAGE } from 'settings/constant';\nimport {\n  FormWrapper,\n  ComponentWrapper,\n  RoomGuestWrapper,\n  ItemWrapper,\n} from './Search.style';\n\nconst calendarItem = {\n  separator: '-',\n  format: 'MM-DD-YYYY',\n  locale: 'en',\n};\n\nconst SearchForm = ({ history }) => {\n  const [searchDate, setSearchDate] = useState({\n    setStartDate: null,\n    setEndDate: null,\n  });\n  const [mapValue, setMapValue] = useState([]);\n\n  // Room guest state\n  const [roomGuest, setRoomGuest] = useState({\n    room: 0,\n    guest: 0,\n  });\n\n  const updatevalueFunc = (event) => {\n    const { searchedPlaceAPIData } = event;\n    if (!isEmpty(searchedPlaceAPIData)) {\n      setMapValue(searchedPlaceAPIData);\n    }\n  };\n\n  // Room Guest data handling\n  const handleIncrement = (type) => {\n    setRoomGuest({\n      ...roomGuest,\n      [type]: roomGuest[type] + 1,\n    });\n  };\n\n  const handleDecrement = (type) => {\n    if (roomGuest[type] <= 0) {\n      return false;\n    }\n    setRoomGuest({\n      ...roomGuest,\n      [type]: roomGuest[type] - 1,\n    });\n  };\n\n  const handleIncDecOnChnage = (e, type) => {\n    let currentValue = e.target.value;\n\n    setRoomGuest({\n      ...roomGuest,\n      [type]: currentValue,\n    });\n  };\n\n  const goToSearchPage = () => {\n    let tempLocation = [];\n    const mapData = mapValue ? mapDataHelper(mapValue) : [];\n    mapData &&\n      mapData.map((singleMapData, i) => {\n        return tempLocation.push({\n          formattedAddress: singleMapData ? singleMapData.formattedAddress : '',\n          lat: singleMapData ? singleMapData.lat.toFixed(3) : null,\n          lng: singleMapData ? singleMapData.lng.toFixed(3) : null,\n        });\n      });\n    const location = tempLocation ? tempLocation[0] : {};\n    const query = {\n      date_range: searchDate,\n      room: roomGuest.room,\n      guest: roomGuest.guest,\n      location,\n    };\n    const search = setStateToUrl(query);\n    history.push({\n      pathname: LISTING_POSTS_PAGE,\n      search: search,\n    });\n  };\n\n  return (\n    <FormWrapper>\n      <ComponentWrapper>\n        <FaMapMarkerAlt className=\"map-marker\" />\n        <MapDropdown />\n      </ComponentWrapper>\n\n      <ComponentWrapper>\n        <FaRegCalendar className=\"calendar\" />\n        <DateRangePickerBox\n          item={calendarItem}\n          startDateId=\"startDateId-id-home\"\n          endDateId=\"endDateId-id-home\"\n          updateSearchData={(setDateValue) => setSearchDate(setDateValue)}\n          showClearDates={true}\n          small={true}\n          numberOfMonths={1}\n        />\n      </ComponentWrapper>\n      \n      <Button\n        type=\"primary\"\n        htmlType=\"submit\"\n        size=\"large\"\n        onClick={goToSearchPage}\n      >\n        Find\n      </Button>\n    </FormWrapper>\n  );\n};\n\nexport default withRouter(SearchForm);\n"]},"metadata":{},"sourceType":"module"}