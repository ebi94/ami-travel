{"ast":null,"code":"import\"antd/es/button/style/css\";import _Button from\"antd/es/button\";import\"antd/es/switch/style/css\";import _Switch from\"antd/es/switch\";import\"antd/es/input/style/css\";import _Input from\"antd/es/input\";import React,{useContext}from'react';import{Link,Redirect}from'react-router-dom';import{useForm,Controller}from'react-hook-form';import{MdLockOpen}from'react-icons/md';import FormControl from'components/UI/FormControl/FormControl';import{AuthContext}from'context/AuthProvider';import{FORGET_PASSWORD_PAGE}from'settings/constant';import{FieldWrapper,SwitchWrapper,Label}from'../Auth.style';const SignInForm=()=>{var _errors$email,_errors$email2,_errors$password,_errors$password2,_errors$password3;const _useContext=useContext(AuthContext),signIn=_useContext.signIn,loggedIn=_useContext.loggedIn;const _useForm=useForm(),control=_useForm.control,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit;const onSubmit=data=>{signIn(data);};if(loggedIn){return/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/'}});}return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(FormControl,{label:\"Email\",htmlFor:\"email\",error:errors.email&&/*#__PURE__*/React.createElement(React.Fragment,null,((_errors$email=errors.email)===null||_errors$email===void 0?void 0:_errors$email.type)==='required'&&/*#__PURE__*/React.createElement(\"span\",null,\"This field is required!\"),((_errors$email2=errors.email)===null||_errors$email2===void 0?void 0:_errors$email2.type)==='pattern'&&/*#__PURE__*/React.createElement(\"span\",null,\"Please enter a valid email address!\"))},/*#__PURE__*/React.createElement(Controller,{as:/*#__PURE__*/React.createElement(_Input,null),type:\"email\",id:\"email\",name:\"email\",defaultValue:\"\",control:control,rules:{required:true,pattern:/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/}})),/*#__PURE__*/React.createElement(FormControl,{label:\"Password\",htmlFor:\"password\",error:errors.password&&/*#__PURE__*/React.createElement(React.Fragment,null,((_errors$password=errors.password)===null||_errors$password===void 0?void 0:_errors$password.type)==='required'&&/*#__PURE__*/React.createElement(\"span\",null,\"This field is required!\"),((_errors$password2=errors.password)===null||_errors$password2===void 0?void 0:_errors$password2.type)==='minLength'&&/*#__PURE__*/React.createElement(\"span\",null,\"Password must be at lest 6 characters!\"),((_errors$password3=errors.password)===null||_errors$password3===void 0?void 0:_errors$password3.type)==='maxLength'&&/*#__PURE__*/React.createElement(\"span\",null,\"Password must not be longer than 20 characters!\"))},/*#__PURE__*/React.createElement(Controller,{as:/*#__PURE__*/React.createElement(_Input.Password,null),defaultValue:\"\",control:control,id:\"password\",name:\"password\",rules:{required:true,minLength:6,maxLength:20}})),/*#__PURE__*/React.createElement(FieldWrapper,null,/*#__PURE__*/React.createElement(SwitchWrapper,null,/*#__PURE__*/React.createElement(Controller,{as:/*#__PURE__*/React.createElement(_Switch,null),name:\"rememberMe\",defaultValue:false,valueName:\"checked\",control:control}),/*#__PURE__*/React.createElement(Label,null,\"Remember Me\")),/*#__PURE__*/React.createElement(Link,{to:FORGET_PASSWORD_PAGE},\"Forget Password ?\")),/*#__PURE__*/React.createElement(_Button,{className:\"signin-btn\",type:\"primary\",htmlType:\"submit\",size:\"large\",style:{width:'100%'}},/*#__PURE__*/React.createElement(MdLockOpen,null),\"Login\"));};export default SignInForm;","map":{"version":3,"sources":["/var/www/html/ami-travel/src/container/Auth/SignIn/SignInForm.js"],"names":["React","useContext","Link","Redirect","useForm","Controller","MdLockOpen","FormControl","AuthContext","FORGET_PASSWORD_PAGE","FieldWrapper","SwitchWrapper","Label","SignInForm","signIn","loggedIn","control","errors","handleSubmit","onSubmit","data","pathname","email","type","required","pattern","password","minLength","maxLength","width"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\nimport { MdLockOpen } from 'react-icons/md';\nimport { Input, Switch, Button } from 'antd';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport { AuthContext } from 'context/AuthProvider';\nimport { FORGET_PASSWORD_PAGE } from 'settings/constant';\nimport { FieldWrapper, SwitchWrapper, Label } from '../Auth.style';\n\nconst SignInForm = () => {\n  const { signIn, loggedIn } = useContext(AuthContext);\n  const { control, errors, handleSubmit } = useForm();\n  const onSubmit = (data) => {\n    signIn(data);\n  };\n  if (loggedIn) {\n    return <Redirect to={{ pathname: '/' }} />;\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl\n        label=\"Email\"\n        htmlFor=\"email\"\n        error={\n          errors.email && (\n            <>\n              {errors.email?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n              {errors.email?.type === 'pattern' && (\n                <span>Please enter a valid email address!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={<Input />}\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n            pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n          }}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Password\"\n        htmlFor=\"password\"\n        error={\n          errors.password && (\n            <>\n              {errors.password?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n              {errors.password?.type === 'minLength' && (\n                <span>Password must be at lest 6 characters!</span>\n              )}\n              {errors.password?.type === 'maxLength' && (\n                <span>Password must not be longer than 20 characters!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={<Input.Password />}\n          defaultValue=\"\"\n          control={control}\n          id=\"password\"\n          name=\"password\"\n          rules={{ required: true, minLength: 6, maxLength: 20 }}\n        />\n      </FormControl>\n      <FieldWrapper>\n        <SwitchWrapper>\n          <Controller\n            as={<Switch />}\n            name=\"rememberMe\"\n            defaultValue={false}\n            valueName=\"checked\"\n            control={control}\n          />\n          <Label>Remember Me</Label>\n        </SwitchWrapper>\n        <Link to={FORGET_PASSWORD_PAGE}>Forget Password ?</Link>\n      </FieldWrapper>\n      <Button\n        className=\"signin-btn\"\n        type=\"primary\"\n        htmlType=\"submit\"\n        size=\"large\"\n        style={{ width: '100%' }}\n      >\n        <MdLockOpen />\n        Login\n      </Button>\n    </form>\n  );\n};\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}