{"ast":null,"code":"import\"antd/es/drawer/style/css\";import _Drawer from\"antd/es/drawer\";import\"antd/es/checkbox/style/css\";import _Checkbox from\"antd/es/checkbox\";import\"antd/es/slider/style/css\";import _Slider from\"antd/es/slider\";import\"antd/es/button/style/css\";import _Button from\"antd/es/button\";import _objectSpread from\"/var/www/html/ami-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/var/www/html/ami-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import moment from'moment';import Heading from'components/UI/Heading/Heading';import DateRangePicker from'components/UI/DatePicker/ReactDates';import InputIncDec from'components/UI/InputIncDec/InputIncDec';import{setStateToUrl,getStateFromUrl}from'./url_handler';import{IoIosArrowDown}from'react-icons/io';import{Accordion,AccordionItem,AccordionItemHeading,AccordionItemButton,AccordionItemPanel}from'react-accessible-accordion';import{priceInit,calenderItem,getAmenities,getPropertyType}from'./SearchParams';import{FilterArea,FilterElementsWrapper,ButtonGroup,RoomGuestWrapper,ItemWrapper}from'./MobileSearchView.style';const FilterDrawer=({history,location})=>{const searchParams=getStateFromUrl(location);const _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggle=_useState2[0],setToggle=_useState2[1];const _useState3=useState(searchParams.amenities||[]),_useState4=_slicedToArray(_useState3,2),amenities=_useState4[0],setAmenities=_useState4[1];const _useState5=useState(searchParams.property||[]),_useState6=_slicedToArray(_useState5,2),propertyType=_useState6[0],setPropertyType=_useState6[1];const _useState7=useState(searchParams.date_range||{setStartDate:null,setEndDate:null}),_useState8=_slicedToArray(_useState7,2),searchDate=_useState8[0],setSearchDate=_useState8[1];const _useState9=useState(searchParams.price||{min:0,max:100,defaultMin:0,defaultMax:100}),_useState10=_slicedToArray(_useState9,2),price=_useState10[0],setPrice=_useState10[1];const roomAndGuest={room:searchParams&&searchParams.room?parseInt(searchParams.room):0,guest:searchParams&&searchParams.guest?parseInt(searchParams.guest):0};const _useState11=useState(roomAndGuest||{room:0,guest:0}),_useState12=_slicedToArray(_useState11,2),roomGuest=_useState12[0],setRoomGuest=_useState12[1];const handleIncrement=type=>{console.log('clicked handleIncrement');setRoomGuest(_objectSpread(_objectSpread({},roomGuest),{},{[type]:roomGuest[type]+1}));};const handleDecrement=type=>{console.log('clicked handleDecrement');if(roomGuest[type]<=0){return false;}setRoomGuest(_objectSpread(_objectSpread({},roomGuest),{},{[type]:roomGuest[type]-1}));};const handleIncDecOnChange=(e,type)=>{let currentValue=e.target.value;setRoomGuest(_objectSpread(_objectSpread({},roomGuest),{},{[type]:currentValue}));};const handleToggleDrawer=()=>{setToggle(!toggle);};const onChangeAmenity=checkedAmenityValue=>{setAmenities(checkedAmenityValue);};const onChangeProperty=checkedPropertValue=>{setPropertyType(checkedPropertValue);};const handlePriceChange=setValue=>{const maxValue=setValue?setValue[1]:price.defaultMin;const minValue=setValue?setValue[0]:price.defaultMax;setPrice({min:minValue,max:maxValue,defaultMin:price.defaultMin,defaultMax:price.defaultMax});};const updateSearchDataFunc=setDateValue=>{setSearchDate({setStartDate:setDateValue.setStartDate,setEndDate:setDateValue.setEndDate});};const handleApplyFilter=()=>{const search=setStateToUrl(_objectSpread({amenities:amenities,property:propertyType,price:[price.min,price.max],date_range:searchDate},roomGuest));history.push({pathname:'/listing',search:search});setToggle(false);};const handleCloseDrawer=()=>{setStateToUrl(null);setAmenities([]);setPropertyType([]);setSearchDate({setStartDate:null,setEndDate:null});setPrice({min:0,max:100,defaultMin:0,defaultMax:100});setRoomGuest({room:0,guest:0});setToggle(false);};return/*#__PURE__*/React.createElement(FilterArea,null,/*#__PURE__*/React.createElement(_Button,{className:toggle?'active':'',onClick:handleToggleDrawer},\"More filters\"),/*#__PURE__*/React.createElement(_Drawer,{className:\"filter_drawer\",height:\"100vh\",placement:\"bottom\",closable:false,maskClosable:false,onClose:handleCloseDrawer,visible:toggle,maskStyle:{backgroundColor:'transparent'}},/*#__PURE__*/React.createElement(FilterElementsWrapper,null,/*#__PURE__*/React.createElement(Accordion,{allowZeroExpanded:true},/*#__PURE__*/React.createElement(AccordionItem,null,/*#__PURE__*/React.createElement(AccordionItemHeading,null,/*#__PURE__*/React.createElement(AccordionItemButton,null,/*#__PURE__*/React.createElement(Heading,{as:\"h4\",content:\"Select Price Range\"}),/*#__PURE__*/React.createElement(IoIosArrowDown,null))),/*#__PURE__*/React.createElement(AccordionItemPanel,null,/*#__PURE__*/React.createElement(_Slider,{range:true,marks:priceInit,min:price.defaultMin,max:price.defaultMax,value:[price.min,price.max],onChange:handlePriceChange}))),/*#__PURE__*/React.createElement(AccordionItem,null,/*#__PURE__*/React.createElement(AccordionItemHeading,null,/*#__PURE__*/React.createElement(AccordionItemButton,null,/*#__PURE__*/React.createElement(Heading,{as:\"h4\",content:\"Choose Date\"}),/*#__PURE__*/React.createElement(IoIosArrowDown,null))),/*#__PURE__*/React.createElement(AccordionItemPanel,null,/*#__PURE__*/React.createElement(DateRangePicker,{startDateId:\"startDate-id-mobile\",endDateId:\"endDate-id-mobile\",numberOfMonths:1,small:true,item:calenderItem,startDate:searchDate.setStartDate?moment(searchDate.setStartDate):null,endDate:searchDate.setEndDate?moment(searchDate.setEndDate):null,updateSearchData:setDateValue=>updateSearchDataFunc(setDateValue)}))),/*#__PURE__*/React.createElement(AccordionItem,null,/*#__PURE__*/React.createElement(AccordionItemHeading,null,/*#__PURE__*/React.createElement(AccordionItemButton,null,/*#__PURE__*/React.createElement(Heading,{as:\"h4\",content:\"Amenities\"}),/*#__PURE__*/React.createElement(IoIosArrowDown,null))),/*#__PURE__*/React.createElement(AccordionItemPanel,null,/*#__PURE__*/React.createElement(_Checkbox.Group,{options:getAmenities.options,value:amenities,onChange:onChangeAmenity}))),/*#__PURE__*/React.createElement(AccordionItem,null,/*#__PURE__*/React.createElement(AccordionItemHeading,null,/*#__PURE__*/React.createElement(AccordionItemButton,null,/*#__PURE__*/React.createElement(Heading,{as:\"h4\",content:\"Property Type\"}),/*#__PURE__*/React.createElement(IoIosArrowDown,null))),/*#__PURE__*/React.createElement(AccordionItemPanel,null,/*#__PURE__*/React.createElement(_Checkbox.Group,{options:getPropertyType.options,value:propertyType,onChange:onChangeProperty}))),/*#__PURE__*/React.createElement(AccordionItem,null,/*#__PURE__*/React.createElement(AccordionItemHeading,null,/*#__PURE__*/React.createElement(AccordionItemButton,null,/*#__PURE__*/React.createElement(Heading,{as:\"h4\",content:\"Choose Room and Guest\"}),/*#__PURE__*/React.createElement(IoIosArrowDown,null))),/*#__PURE__*/React.createElement(AccordionItemPanel,null,/*#__PURE__*/React.createElement(RoomGuestWrapper,null,/*#__PURE__*/React.createElement(ItemWrapper,null,/*#__PURE__*/React.createElement(\"strong\",null,\"Room\"),/*#__PURE__*/React.createElement(InputIncDec,{id:\"room\",increment:()=>handleIncrement('room'),decrement:()=>handleDecrement('room'),onChange:e=>handleIncDecOnChange(e,'room'),value:roomGuest.room})),/*#__PURE__*/React.createElement(ItemWrapper,null,/*#__PURE__*/React.createElement(\"strong\",null,\"Guest\"),/*#__PURE__*/React.createElement(InputIncDec,{id:\"guest\",increment:()=>handleIncrement('guest'),decrement:()=>handleDecrement('guest'),onChange:e=>handleIncDecOnChange(e,'guest'),value:roomGuest.guest})))))),/*#__PURE__*/React.createElement(ButtonGroup,null,/*#__PURE__*/React.createElement(_Button,{onClick:handleCloseDrawer},\"Cancel Filter\"),/*#__PURE__*/React.createElement(_Button,{type:\"primary\",onClick:handleApplyFilter},\"Apply Filter\")))));};export default FilterDrawer;","map":{"version":3,"sources":["/var/www/html/ami-travel/src/components/Search/MobileSearchView.js"],"names":["React","useState","moment","Heading","DateRangePicker","InputIncDec","setStateToUrl","getStateFromUrl","IoIosArrowDown","Accordion","AccordionItem","AccordionItemHeading","AccordionItemButton","AccordionItemPanel","priceInit","calenderItem","getAmenities","getPropertyType","FilterArea","FilterElementsWrapper","ButtonGroup","RoomGuestWrapper","ItemWrapper","FilterDrawer","history","location","searchParams","toggle","setToggle","amenities","setAmenities","property","propertyType","setPropertyType","date_range","setStartDate","setEndDate","searchDate","setSearchDate","price","min","max","defaultMin","defaultMax","setPrice","roomAndGuest","room","parseInt","guest","roomGuest","setRoomGuest","handleIncrement","type","console","log","handleDecrement","handleIncDecOnChange","e","currentValue","target","value","handleToggleDrawer","onChangeAmenity","checkedAmenityValue","onChangeProperty","checkedPropertValue","handlePriceChange","setValue","maxValue","minValue","updateSearchDataFunc","setDateValue","handleApplyFilter","search","push","pathname","handleCloseDrawer","backgroundColor","options"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Slider, Button, Drawer, Checkbox } from 'antd';\nimport Heading from 'components/UI/Heading/Heading';\nimport DateRangePicker from 'components/UI/DatePicker/ReactDates';\nimport InputIncDec from 'components/UI/InputIncDec/InputIncDec';\nimport { setStateToUrl, getStateFromUrl } from './url_handler';\nimport { IoIosArrowDown } from 'react-icons/io';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from 'react-accessible-accordion';\n\nimport {\n  priceInit,\n  calenderItem,\n  getAmenities,\n  getPropertyType,\n} from './SearchParams';\nimport {\n  FilterArea,\n  FilterElementsWrapper,\n  ButtonGroup,\n  RoomGuestWrapper,\n  ItemWrapper,\n} from './MobileSearchView.style';\n\nconst FilterDrawer = ({ history, location }) => {\n  const searchParams = getStateFromUrl(location);\n  const [toggle, setToggle] = useState(false);\n  const [amenities, setAmenities] = useState(searchParams.amenities || []);\n  const [propertyType, setPropertyType] = useState(searchParams.property || []);\n  const [searchDate, setSearchDate] = useState(\n    searchParams.date_range || {\n      setStartDate: null,\n      setEndDate: null,\n    }\n  );\n  const [price, setPrice] = useState(\n    searchParams.price || {\n      min: 0,\n      max: 100,\n      defaultMin: 0,\n      defaultMax: 100,\n    }\n  );\n  const roomAndGuest = {\n    room: searchParams && searchParams.room ? parseInt(searchParams.room) : 0,\n    guest:\n      searchParams && searchParams.guest ? parseInt(searchParams.guest) : 0,\n  };\n  const [roomGuest, setRoomGuest] = useState(\n    roomAndGuest || {\n      room: 0,\n      guest: 0,\n    }\n  );\n  const handleIncrement = (type) => {\n    console.log('clicked handleIncrement');\n    setRoomGuest({\n      ...roomGuest,\n      [type]: roomGuest[type] + 1,\n    });\n  };\n  const handleDecrement = (type) => {\n    console.log('clicked handleDecrement');\n    if (roomGuest[type] <= 0) {\n      return false;\n    }\n    setRoomGuest({\n      ...roomGuest,\n      [type]: roomGuest[type] - 1,\n    });\n  };\n  const handleIncDecOnChange = (e, type) => {\n    let currentValue = e.target.value;\n    setRoomGuest({\n      ...roomGuest,\n      [type]: currentValue,\n    });\n  };\n  const handleToggleDrawer = () => {\n    setToggle(!toggle);\n  };\n  const onChangeAmenity = (checkedAmenityValue) => {\n    setAmenities(checkedAmenityValue);\n  };\n  const onChangeProperty = (checkedPropertValue) => {\n    setPropertyType(checkedPropertValue);\n  };\n  const handlePriceChange = (setValue) => {\n    const maxValue = setValue ? setValue[1] : price.defaultMin;\n    const minValue = setValue ? setValue[0] : price.defaultMax;\n    setPrice({\n      min: minValue,\n      max: maxValue,\n      defaultMin: price.defaultMin,\n      defaultMax: price.defaultMax,\n    });\n  };\n  const updateSearchDataFunc = (setDateValue) => {\n    setSearchDate({\n      setStartDate: setDateValue.setStartDate,\n      setEndDate: setDateValue.setEndDate,\n    });\n  };\n  const handleApplyFilter = () => {\n    const search = setStateToUrl({\n      amenities: amenities,\n      property: propertyType,\n      price: [price.min, price.max],\n      date_range: searchDate,\n      ...roomGuest,\n    });\n    history.push({\n      pathname: '/listing',\n      search: search,\n    });\n    setToggle(false);\n  };\n  const handleCloseDrawer = () => {\n    setStateToUrl(null);\n    setAmenities([]);\n    setPropertyType([]);\n    setSearchDate({\n      setStartDate: null,\n      setEndDate: null,\n    });\n    setPrice({\n      min: 0,\n      max: 100,\n      defaultMin: 0,\n      defaultMax: 100,\n    });\n    setRoomGuest({\n      room: 0,\n      guest: 0,\n    });\n    setToggle(false);\n  };\n\n  return (\n    <FilterArea>\n      <Button className={toggle ? 'active' : ''} onClick={handleToggleDrawer}>\n        More filters\n      </Button>\n      <Drawer\n        className=\"filter_drawer\"\n        height=\"100vh\"\n        placement=\"bottom\"\n        closable={false}\n        maskClosable={false}\n        onClose={handleCloseDrawer}\n        visible={toggle}\n        maskStyle={{ backgroundColor: 'transparent' }}\n      >\n        <FilterElementsWrapper>\n          <Accordion allowZeroExpanded={true}>\n            {/* Start price range filter element */}\n            <AccordionItem>\n              <AccordionItemHeading>\n                <AccordionItemButton>\n                  <Heading as=\"h4\" content=\"Select Price Range\" />\n                  <IoIosArrowDown />\n                </AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <Slider\n                  range\n                  marks={priceInit}\n                  min={price.defaultMin}\n                  max={price.defaultMax}\n                  value={[price.min, price.max]}\n                  onChange={handlePriceChange}\n                />\n              </AccordionItemPanel>\n            </AccordionItem>\n            {/* End of price range filter element */}\n\n            {/* Start date filter element */}\n            <AccordionItem>\n              <AccordionItemHeading>\n                <AccordionItemButton>\n                  <Heading as=\"h4\" content=\"Choose Date\" />\n                  <IoIosArrowDown />\n                </AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <DateRangePicker\n                  startDateId=\"startDate-id-mobile\"\n                  endDateId=\"endDate-id-mobile\"\n                  numberOfMonths={1}\n                  small={true}\n                  item={calenderItem}\n                  startDate={\n                    searchDate.setStartDate\n                      ? moment(searchDate.setStartDate)\n                      : null\n                  }\n                  endDate={\n                    searchDate.setEndDate ? moment(searchDate.setEndDate) : null\n                  }\n                  updateSearchData={(setDateValue) =>\n                    updateSearchDataFunc(setDateValue)\n                  }\n                />\n              </AccordionItemPanel>\n            </AccordionItem>\n            {/* End of date filter element */}\n\n            {/* Start amenities filter element */}\n            <AccordionItem>\n              <AccordionItemHeading>\n                <AccordionItemButton>\n                  <Heading as=\"h4\" content=\"Amenities\" />\n                  <IoIosArrowDown />\n                </AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <Checkbox.Group\n                  options={getAmenities.options}\n                  value={amenities}\n                  onChange={onChangeAmenity}\n                />\n              </AccordionItemPanel>\n            </AccordionItem>\n            {/* End of amenities filter element */}\n\n            {/* Start property type filter element */}\n            <AccordionItem>\n              <AccordionItemHeading>\n                <AccordionItemButton>\n                  <Heading as=\"h4\" content=\"Property Type\" />\n                  <IoIosArrowDown />\n                </AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <Checkbox.Group\n                  options={getPropertyType.options}\n                  value={propertyType}\n                  onChange={onChangeProperty}\n                />\n              </AccordionItemPanel>\n            </AccordionItem>\n            {/* End of property type filter element */}\n\n            {/* Room & Guest type filter element */}\n            <AccordionItem>\n              <AccordionItemHeading>\n                <AccordionItemButton>\n                  <Heading as=\"h4\" content=\"Choose Room and Guest\" />\n                  <IoIosArrowDown />\n                </AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <RoomGuestWrapper>\n                  <ItemWrapper>\n                    <strong>Room</strong>\n                    <InputIncDec\n                      id=\"room\"\n                      increment={() => handleIncrement('room')}\n                      decrement={() => handleDecrement('room')}\n                      onChange={(e) => handleIncDecOnChange(e, 'room')}\n                      value={roomGuest.room}\n                    />\n                  </ItemWrapper>\n\n                  <ItemWrapper>\n                    <strong>Guest</strong>\n                    <InputIncDec\n                      id=\"guest\"\n                      increment={() => handleIncrement('guest')}\n                      decrement={() => handleDecrement('guest')}\n                      onChange={(e) => handleIncDecOnChange(e, 'guest')}\n                      value={roomGuest.guest}\n                    />\n                  </ItemWrapper>\n                </RoomGuestWrapper>\n              </AccordionItemPanel>\n            </AccordionItem>\n            {/* End of Room & Guest type filter element */}\n          </Accordion>\n\n          <ButtonGroup>\n            <Button onClick={handleCloseDrawer}>Cancel Filter</Button>\n            <Button type=\"primary\" onClick={handleApplyFilter}>\n              Apply Filter\n            </Button>\n          </ButtonGroup>\n        </FilterElementsWrapper>\n      </Drawer>\n    </FilterArea>\n  );\n};\n\nexport default FilterDrawer;\n"]},"metadata":{},"sourceType":"module"}