{"ast":null,"code":"import React from'react';import HtmlLabel from'../HtmlLabel/HtmlLabel';import Wrapper from'./FormControl.style';const FormControl=({className,label,labelTag,htmlFor,children,error})=>{const addAllClasses=['form-control'];if(error){addAllClasses.push('has-error');}if(className){addAllClasses.push(className);}return/*#__PURE__*/React.createElement(Wrapper,{className:addAllClasses.join(' ')},label&&/*#__PURE__*/React.createElement(HtmlLabel,{className:\"field-label\",as:labelTag,htmlFor:htmlFor,content:label}),children,error&&/*#__PURE__*/React.createElement(\"div\",{className:\"feedback\"},error));};export default FormControl;","map":{"version":3,"sources":["/var/www/html/ami-travel/src/components/UI/FormControl/FormControl.js"],"names":["React","HtmlLabel","Wrapper","FormControl","className","label","labelTag","htmlFor","children","error","addAllClasses","push","join"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CAEA,KAAMC,CAAAA,WAAW,CAAG,CAAC,CACnBC,SADmB,CAEnBC,KAFmB,CAGnBC,QAHmB,CAInBC,OAJmB,CAKnBC,QALmB,CAMnBC,KANmB,CAAD,GAOd,CACJ,KAAMC,CAAAA,aAAa,CAAG,CAAC,cAAD,CAAtB,CACA,GAAID,KAAJ,CAAW,CACTC,aAAa,CAACC,IAAd,CAAmB,WAAnB,EACD,CACD,GAAIP,SAAJ,CAAe,CACbM,aAAa,CAACC,IAAd,CAAmBP,SAAnB,EACD,CAED,mBACE,oBAAC,OAAD,EAAS,SAAS,CAAEM,aAAa,CAACE,IAAd,CAAmB,GAAnB,CAApB,EACGP,KAAK,eACJ,oBAAC,SAAD,EACE,SAAS,CAAC,aADZ,CAEE,EAAE,CAAEC,QAFN,CAGE,OAAO,CAAEC,OAHX,CAIE,OAAO,CAAEF,KAJX,EAFJ,CASGG,QATH,CAUGC,KAAK,eAAI,2BAAK,SAAS,CAAC,UAAf,EAA2BA,KAA3B,CAVZ,CADF,CAcD,CA9BD,CAyCA,cAAeN,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport HtmlLabel from '../HtmlLabel/HtmlLabel';\nimport Wrapper from './FormControl.style';\n\nconst FormControl = ({\n  className,\n  label,\n  labelTag,\n  htmlFor,\n  children,\n  error,\n}) => {\n  const addAllClasses = ['form-control'];\n  if (error) {\n    addAllClasses.push('has-error');\n  }\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <Wrapper className={addAllClasses.join(' ')}>\n      {label && (\n        <HtmlLabel\n          className=\"field-label\"\n          as={labelTag}\n          htmlFor={htmlFor}\n          content={label}\n        />\n      )}\n      {children}\n      {error && <div className=\"feedback\">{error}</div>}\n    </Wrapper>\n  );\n};\n\nFormControl.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  labelTag: PropTypes.string,\n  htmlFor: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.any,\n};\n\nexport default FormControl;\n"]},"metadata":{},"sourceType":"module"}