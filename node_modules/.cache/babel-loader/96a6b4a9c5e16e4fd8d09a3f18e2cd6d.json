{"ast":null,"code":"import'react-dates/initialize';import{DateRangePicker}from'react-dates';import'react-dates/lib/css/_datepicker.css';import React,{Component}from'react';import{ReactDatesStyleWrapper}from'./ReactDates.style';/*\n * For Localization enable this code [example : French language as \"fr\"]\n */ // import moment from 'moment';\n// import 'moment/locale/fr';\nclass DateRangePickerBox extends Component{constructor(props){super(props);this.onDateChangeFunc=({startDate,endDate})=>{const dateFormat=this.state.dateFormat;this.setState({startDate,endDate});if(startDate!==null&&endDate!==null){this.props.updateSearchData({setStartDate:startDate.format(dateFormat),setEndDate:endDate.format(dateFormat)});}};this.onFocusChangeFunc=focusedInput=>{return this.setState({focusedInput});};const separator=this.props.item&&this.props.item.separator?this.props.item.separator:'/';const _dateFormat=this.props.item&&this.props.item.format?this.props.item.format:'llll';this.state={focusedInput:null,startDate:this.props.startDate?this.props.startDate:null,endDate:this.props.endDate?this.props.endDate:null,dateFormat:_dateFormat,separator};this.onDateChangeFunc=this.onDateChangeFunc.bind(this);this.onFocusChangeFunc=this.onFocusChangeFunc.bind(this);/*\n     * For Localization enable this code [example : French language as \"fr\"]\n     */ // moment.locale('fr');\n}render(){const _this$state=this.state,focusedInput=_this$state.focusedInput,startDate=_this$state.startDate,endDate=_this$state.endDate;// DateRangePickerBox props list\nconst _this$props=this.props,className=_this$props.className,startDateId=_this$props.startDateId,endDateId=_this$props.endDateId,startDatePlaceholderText=_this$props.startDatePlaceholderText,endDatePlaceholderText=_this$props.endDatePlaceholderText,disabled=_this$props.disabled,showClearDates=_this$props.showClearDates,isRTL=_this$props.isRTL,orientation=_this$props.orientation,anchorDirection=_this$props.anchorDirection,withPortal=_this$props.withPortal,withFullScreenPortal=_this$props.withFullScreenPortal,small=_this$props.small,block=_this$props.block,numberOfMonths=_this$props.numberOfMonths,regular=_this$props.regular,noBorder=_this$props.noBorder;// Add all classs to an array **************\nconst addAllClasses=['date_picker'];// className prop checking **************\nif(className){addAllClasses.push(className);}// React-Dates DateRangePicker Props List\nconst defaultCalenderProps={startDateId:startDateId?startDateId:'start_unique_id',endDateId:endDateId?endDateId:'end_date_unique_id',startDate,endDate,focusedInput,onFocusChange:this.onFocusChangeFunc,onDatesChange:this.onDateChangeFunc,startDatePlaceholderText,endDatePlaceholderText,disabled,isRTL,showClearDates:showClearDates?showClearDates:false,orientation,anchorDirection,withPortal,withFullScreenPortal,small,numberOfMonths:numberOfMonths?numberOfMonths:2,block,regular,noBorder};return/*#__PURE__*/React.createElement(ReactDatesStyleWrapper,{className:addAllClasses.join(' ')},/*#__PURE__*/React.createElement(DateRangePicker,defaultCalenderProps));}}export default DateRangePickerBox;","map":{"version":3,"sources":["/var/www/html/ami/src/components/UI/DatePicker/ReactDates.js"],"names":["DateRangePicker","React","Component","ReactDatesStyleWrapper","DateRangePickerBox","constructor","props","onDateChangeFunc","startDate","endDate","dateFormat","state","setState","updateSearchData","setStartDate","format","setEndDate","onFocusChangeFunc","focusedInput","separator","item","bind","render","className","startDateId","endDateId","startDatePlaceholderText","endDatePlaceholderText","disabled","showClearDates","isRTL","orientation","anchorDirection","withPortal","withFullScreenPortal","small","block","numberOfMonths","regular","noBorder","addAllClasses","push","defaultCalenderProps","onFocusChange","onDatesChange","join"],"mappings":"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","sourcesContent":["import 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactDatesStyleWrapper } from './ReactDates.style';\n/*\n * For Localization enable this code [example : French language as \"fr\"]\n */\n// import moment from 'moment';\n// import 'moment/locale/fr';\n\nclass DateRangePickerBox extends Component {\n  constructor(props) {\n    super(props);\n    const separator =\n      this.props.item && this.props.item.separator\n        ? this.props.item.separator\n        : '/';\n    const dateFormat =\n      this.props.item && this.props.item.format\n        ? this.props.item.format\n        : 'llll';\n    this.state = {\n      focusedInput: null,\n      startDate: this.props.startDate ? this.props.startDate : null,\n      endDate: this.props.endDate ? this.props.endDate : null,\n      dateFormat,\n      separator,\n    };\n    this.onDateChangeFunc = this.onDateChangeFunc.bind(this);\n    this.onFocusChangeFunc = this.onFocusChangeFunc.bind(this);\n    /*\n     * For Localization enable this code [example : French language as \"fr\"]\n     */\n    // moment.locale('fr');\n  }\n\n  onDateChangeFunc = ({ startDate, endDate }) => {\n    const { dateFormat } = this.state;\n    this.setState({ startDate, endDate });\n    if (startDate !== null && endDate !== null) {\n      this.props.updateSearchData({\n        setStartDate: startDate.format(dateFormat),\n        setEndDate: endDate.format(dateFormat),\n      });\n    }\n  };\n\n  onFocusChangeFunc = focusedInput => {\n    return this.setState({ focusedInput });\n  };\n\n  render() {\n    const { focusedInput, startDate, endDate } = this.state;\n    // DateRangePickerBox props list\n    const {\n      className,\n      startDateId,\n      endDateId,\n      startDatePlaceholderText,\n      endDatePlaceholderText,\n      disabled,\n      showClearDates,\n      isRTL,\n      orientation,\n      anchorDirection,\n      withPortal,\n      withFullScreenPortal,\n      small,\n      block,\n      numberOfMonths,\n      regular,\n      noBorder,\n    } = this.props;\n\n    // Add all classs to an array **************\n    const addAllClasses = ['date_picker'];\n    // className prop checking **************\n    if (className) {\n      addAllClasses.push(className);\n    }\n\n    // React-Dates DateRangePicker Props List\n    const defaultCalenderProps = {\n      startDateId: startDateId ? startDateId : 'start_unique_id',\n      endDateId: endDateId ? endDateId : 'end_date_unique_id',\n      startDate,\n      endDate,\n      focusedInput,\n      onFocusChange: this.onFocusChangeFunc,\n      onDatesChange: this.onDateChangeFunc,\n      startDatePlaceholderText,\n      endDatePlaceholderText,\n      disabled,\n      isRTL,\n      showClearDates: showClearDates ? showClearDates : false,\n      orientation,\n      anchorDirection,\n      withPortal,\n      withFullScreenPortal,\n      small,\n      numberOfMonths: numberOfMonths ? numberOfMonths : 2,\n      block,\n      regular,\n      noBorder,\n    };\n\n    return (\n      <ReactDatesStyleWrapper className={addAllClasses.join(' ')}>\n        <DateRangePicker {...defaultCalenderProps} />\n      </ReactDatesStyleWrapper>\n    );\n  }\n}\n\nDateRangePickerBox.propTypes = {\n  /** startDateId of the date-picker field */\n  startDateId: PropTypes.string.isRequired,\n  /** endDateId of the date-picker field */\n  endDateId: PropTypes.string.isRequired, //\n  /** startDatePlaceholderText of the date-picker field */\n  startDatePlaceholderText: PropTypes.string,\n  /** endDatePlaceholderText of the date-picker field */\n  endDatePlaceholderText: PropTypes.string,\n  /** disabled of the date-picker field */\n  disabled: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['START_DATE', 'END_DATE']),\n  ]),\n\n  /** showClearDates of the date-picker field */\n  showClearDates: PropTypes.bool,\n  /** isRTL of the date-picker field */\n  isRTL: PropTypes.bool,\n  /** orientation of the date-picker field */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /** anchorDirection of the date-picker field */\n  anchorDirection: PropTypes.oneOf(['left', 'right']),\n  /** withPortal of the date-picker field */\n  withPortal: PropTypes.bool,\n  /** withFullScreenPortal of the date-picker field */\n  withFullScreenPortal: PropTypes.bool,\n  /** small of the date-picker field */\n  small: PropTypes.bool,\n  /** numberOfMonths of the date-picker field */\n  numberOfMonths: PropTypes.number,\n  /** block of the date-picker field */\n  block: PropTypes.bool,\n  /** regular of the date-picker field */\n  regular: PropTypes.bool,\n  /** noBorder of the date-picker field */\n  noBorder: PropTypes.bool,\n  /** updateSearchData of the date-picker field to send component data to parent component */\n  updateSearchData: PropTypes.func,\n};\n\nexport default DateRangePickerBox;\n"]},"metadata":{},"sourceType":"module"}