{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport _objectSpread from \"/var/www/html/ami/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/var/www/html/ami/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/ami/src/container/Home/SearchLanding/SearchForm.js\";\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport isEmpty from 'lodash/isEmpty';\nimport { FaMapMarkerAlt, FaRegCalendar, FaUserFriends } from 'react-icons/fa';\nimport DateRangePickerBox from 'components/UI/DatePicker/ReactDates';\nimport MapAutoComplete from 'components/Map/MapAutoComplete';\nimport MapDropdown from 'components/Map/MapDropdown';\nimport { mapDataHelper } from 'components/Map/mapDataHelper';\nimport ViewWithPopup from 'components/UI/ViewWithPopup/ViewWithPopup';\nimport InputIncDec from 'components/UI/InputIncDec/InputIncDec';\nimport { setStateToUrl } from 'library/helpers/url_handler';\nimport { LISTING_POSTS_PAGE } from 'settings/constant';\nimport { FormWrapper, ComponentWrapper, RoomGuestWrapper, ItemWrapper } from './Search.style';\nconst calendarItem = {\n  separator: '-',\n  format: 'MM-DD-YYYY',\n  locale: 'en'\n};\n\nconst SearchForm = ({\n  history\n}) => {\n  const _useState = useState({\n    setStartDate: null,\n    setEndDate: null\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchDate = _useState2[0],\n        setSearchDate = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mapValue = _useState4[0],\n        setMapValue = _useState4[1]; // Room guest state\n\n\n  const _useState5 = useState({\n    room: 0,\n    guest: 0\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        roomGuest = _useState6[0],\n        setRoomGuest = _useState6[1];\n\n  const updatevalueFunc = event => {\n    const searchedPlaceAPIData = event.searchedPlaceAPIData;\n\n    if (!isEmpty(searchedPlaceAPIData)) {\n      setMapValue(searchedPlaceAPIData);\n    }\n  }; // Room Guest data handling\n\n\n  const handleIncrement = type => {\n    setRoomGuest(_objectSpread(_objectSpread({}, roomGuest), {}, {\n      [type]: roomGuest[type] + 1\n    }));\n  };\n\n  const handleDecrement = type => {\n    if (roomGuest[type] <= 0) {\n      return false;\n    }\n\n    setRoomGuest(_objectSpread(_objectSpread({}, roomGuest), {}, {\n      [type]: roomGuest[type] - 1\n    }));\n  };\n\n  const handleIncDecOnChnage = (e, type) => {\n    let currentValue = e.target.value;\n    setRoomGuest(_objectSpread(_objectSpread({}, roomGuest), {}, {\n      [type]: currentValue\n    }));\n  };\n\n  const goToSearchPage = () => {\n    let tempLocation = [];\n    const mapData = mapValue ? mapDataHelper(mapValue) : [];\n    mapData && mapData.map((singleMapData, i) => {\n      return tempLocation.push({\n        formattedAddress: singleMapData ? singleMapData.formattedAddress : '',\n        lat: singleMapData ? singleMapData.lat.toFixed(3) : null,\n        lng: singleMapData ? singleMapData.lng.toFixed(3) : null\n      });\n    });\n    const location = tempLocation ? tempLocation[0] : {};\n    const query = {\n      date_range: searchDate,\n      room: roomGuest.room,\n      guest: roomGuest.guest,\n      location\n    };\n    const search = setStateToUrl(query);\n    history.push({\n      pathname: LISTING_POSTS_PAGE,\n      search: search\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(FormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ComponentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaMapMarkerAlt, {\n    className: \"map-marker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MapDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ComponentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaRegCalendar, {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DateRangePickerBox, {\n    item: calendarItem,\n    startDateId: \"startDateId-id-home\",\n    endDateId: \"endDateId-id-home\",\n    updateSearchData: setDateValue => setSearchDate(setDateValue),\n    showClearDates: true,\n    small: true,\n    numberOfMonths: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    size: \"large\",\n    onClick: goToSearchPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Find\"));\n};\n\nexport default withRouter(SearchForm);","map":{"version":3,"sources":["/var/www/html/ami/src/container/Home/SearchLanding/SearchForm.js"],"names":["React","useState","withRouter","isEmpty","FaMapMarkerAlt","FaRegCalendar","FaUserFriends","DateRangePickerBox","MapAutoComplete","MapDropdown","mapDataHelper","ViewWithPopup","InputIncDec","setStateToUrl","LISTING_POSTS_PAGE","FormWrapper","ComponentWrapper","RoomGuestWrapper","ItemWrapper","calendarItem","separator","format","locale","SearchForm","history","setStartDate","setEndDate","searchDate","setSearchDate","mapValue","setMapValue","room","guest","roomGuest","setRoomGuest","updatevalueFunc","event","searchedPlaceAPIData","handleIncrement","type","handleDecrement","handleIncDecOnChnage","e","currentValue","target","value","goToSearchPage","tempLocation","mapData","map","singleMapData","i","push","formattedAddress","lat","toFixed","lng","location","query","date_range","search","pathname","setDateValue"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport isEmpty from 'lodash/isEmpty';\nimport { FaMapMarkerAlt, FaRegCalendar, FaUserFriends } from 'react-icons/fa';\nimport { Button } from 'antd';\nimport DateRangePickerBox from 'components/UI/DatePicker/ReactDates';\nimport MapAutoComplete from 'components/Map/MapAutoComplete';\nimport MapDropdown from 'components/Map/MapDropdown'\nimport { mapDataHelper } from 'components/Map/mapDataHelper';\nimport ViewWithPopup from 'components/UI/ViewWithPopup/ViewWithPopup';\nimport InputIncDec from 'components/UI/InputIncDec/InputIncDec';\nimport { setStateToUrl } from 'library/helpers/url_handler';\nimport { LISTING_POSTS_PAGE } from 'settings/constant';\nimport {\n  FormWrapper,\n  ComponentWrapper,\n  RoomGuestWrapper,\n  ItemWrapper,\n} from './Search.style';\n\nconst calendarItem = {\n  separator: '-',\n  format: 'MM-DD-YYYY',\n  locale: 'en',\n};\n\nconst SearchForm = ({ history }) => {\n  const [searchDate, setSearchDate] = useState({\n    setStartDate: null,\n    setEndDate: null,\n  });\n  const [mapValue, setMapValue] = useState([]);\n\n  // Room guest state\n  const [roomGuest, setRoomGuest] = useState({\n    room: 0,\n    guest: 0,\n  });\n\n  const updatevalueFunc = (event) => {\n    const { searchedPlaceAPIData } = event;\n    if (!isEmpty(searchedPlaceAPIData)) {\n      setMapValue(searchedPlaceAPIData);\n    }\n  };\n\n  // Room Guest data handling\n  const handleIncrement = (type) => {\n    setRoomGuest({\n      ...roomGuest,\n      [type]: roomGuest[type] + 1,\n    });\n  };\n\n  const handleDecrement = (type) => {\n    if (roomGuest[type] <= 0) {\n      return false;\n    }\n    setRoomGuest({\n      ...roomGuest,\n      [type]: roomGuest[type] - 1,\n    });\n  };\n\n  const handleIncDecOnChnage = (e, type) => {\n    let currentValue = e.target.value;\n\n    setRoomGuest({\n      ...roomGuest,\n      [type]: currentValue,\n    });\n  };\n\n  const goToSearchPage = () => {\n    let tempLocation = [];\n    const mapData = mapValue ? mapDataHelper(mapValue) : [];\n    mapData &&\n      mapData.map((singleMapData, i) => {\n        return tempLocation.push({\n          formattedAddress: singleMapData ? singleMapData.formattedAddress : '',\n          lat: singleMapData ? singleMapData.lat.toFixed(3) : null,\n          lng: singleMapData ? singleMapData.lng.toFixed(3) : null,\n        });\n      });\n    const location = tempLocation ? tempLocation[0] : {};\n    const query = {\n      date_range: searchDate,\n      room: roomGuest.room,\n      guest: roomGuest.guest,\n      location,\n    };\n    const search = setStateToUrl(query);\n    history.push({\n      pathname: LISTING_POSTS_PAGE,\n      search: search,\n    });\n  };\n\n  return (\n    <FormWrapper>\n      <ComponentWrapper>\n        <FaMapMarkerAlt className=\"map-marker\" />\n        <MapDropdown />\n      </ComponentWrapper>\n\n      <ComponentWrapper>\n        <FaRegCalendar className=\"calendar\" />\n        <DateRangePickerBox\n          item={calendarItem}\n          startDateId=\"startDateId-id-home\"\n          endDateId=\"endDateId-id-home\"\n          updateSearchData={(setDateValue) => setSearchDate(setDateValue)}\n          showClearDates={true}\n          small={true}\n          numberOfMonths={1}\n        />\n      </ComponentWrapper>\n      \n      <Button\n        type=\"primary\"\n        htmlType=\"submit\"\n        size=\"large\"\n        onClick={goToSearchPage}\n      >\n        Find\n      </Button>\n    </FormWrapper>\n  );\n};\n\nexport default withRouter(SearchForm);\n"]},"metadata":{},"sourceType":"module"}