{"ast":null,"code":"import\"antd/es/button/style/css\";import _Button from\"antd/es/button\";import\"antd/es/row/style/css\";import _Row from\"antd/es/row\";import\"antd/es/input-number/style/css\";import _InputNumber from\"antd/es/input-number\";import\"antd/es/col/style/css\";import _Col from\"antd/es/col\";import\"antd/es/input/style/css\";import _Input from\"antd/es/input\";import _objectSpread from\"/var/www/html/ami-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/var/www/html/ami-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useStateMachine}from'little-state-machine';import{useForm,Controller}from'react-hook-form';import InputIncDec from'components/UI/InputIncDec/InputIncDec';import FormControl from'components/UI/FormControl/FormControl';import AddListingAction from'./AddListingAction';import{FormHeader,Title,FormContent,FormAction}from'./AddListing.style';const BasicInformation=({setStep})=>{var _errors$pricePerNight,_errors$pricePerNight2;const _useStateMachine=useStateMachine(AddListingAction),action=_useStateMachine.action,state=_useStateMachine.state;const _useForm=useForm(),control=_useForm.control,register=_useForm.register,errors=_useForm.errors,setValue=_useForm.setValue,handleSubmit=_useForm.handleSubmit;const _useState=useState({guest:0,bed:0}),_useState2=_slicedToArray(_useState,2),quantity=_useState2[0],setQuantity=_useState2[1];useEffect(()=>{register({name:'guest'},{required:true});register({name:'bed'},{required:true});},[register]);const handleOnChange=key=>event=>{setQuantity(_objectSpread(_objectSpread({},quantity),{},{[key]:event.target.value}));setValue([key],event.target.value);};const handleIncrement=key=>{setQuantity(_objectSpread(_objectSpread({},quantity),{},{[key]:++quantity[key]}));setValue([key],++quantity[key]);};const handleDecrement=key=>{if(quantity[key]<=0){return false;}setQuantity(_objectSpread(_objectSpread({},quantity),{},{[key]:--quantity[key]}));setValue([key],--quantity[key]);};const onSubmit=data=>{action(data);setStep(2);};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(FormContent,null,/*#__PURE__*/React.createElement(FormHeader,null,/*#__PURE__*/React.createElement(Title,null,\"Step 1: Start with the basics\")),/*#__PURE__*/React.createElement(_Row,{gutter:30},/*#__PURE__*/React.createElement(_Col,{sm:12},/*#__PURE__*/React.createElement(FormControl,{label:\"Hotel Name\",htmlFor:\"hotelName\",error:errors.hotelName&&/*#__PURE__*/React.createElement(\"span\",null,\"This field is required!\")},/*#__PURE__*/React.createElement(Controller,{as:/*#__PURE__*/React.createElement(_Input,null),id:\"hotelName\",name:\"hotelName\",defaultValue:state.data.hotelName,control:control,placeholder:\"Write your hotel name here\",rules:{required:true}}))),/*#__PURE__*/React.createElement(_Col,{sm:12},/*#__PURE__*/React.createElement(FormControl,{label:\"Price Per Night (USD)\",htmlFor:\"pricePerNight\",error:errors.pricePerNight&&/*#__PURE__*/React.createElement(React.Fragment,null,((_errors$pricePerNight=errors.pricePerNight)===null||_errors$pricePerNight===void 0?void 0:_errors$pricePerNight.type)==='required'&&/*#__PURE__*/React.createElement(\"span\",null,\"This field is required!\"),((_errors$pricePerNight2=errors.pricePerNight)===null||_errors$pricePerNight2===void 0?void 0:_errors$pricePerNight2.type)==='pattern'&&/*#__PURE__*/React.createElement(\"span\",null,\"Please enter only number!\"))},/*#__PURE__*/React.createElement(Controller,{as:/*#__PURE__*/React.createElement(_InputNumber,null),id:\"pricePerNight\",name:\"pricePerNight\",defaultValue:state.data.pricePerNight,control:control,placeholder:\"00.00\",rules:{required:true,pattern:/^[0-9]*$/}})))),/*#__PURE__*/React.createElement(FormControl,{label:\"Hotel Description\",htmlFor:\"hotelDescription\",error:errors.hotelDescription&&/*#__PURE__*/React.createElement(\"span\",null,\"This field is required!\")},/*#__PURE__*/React.createElement(Controller,{as:/*#__PURE__*/React.createElement(_Input.TextArea,{rows:5}),id:\"hotelDescription\",name:\"hotelDescription\",defaultValue:state.data.hotelDescription,control:control,placeholder:\"Tell people about your hotel, room, location & amenities\",rules:{required:true}})),/*#__PURE__*/React.createElement(FormControl,{label:\"How many guests can your hotel accommodate?\",error:errors.guest&&/*#__PURE__*/React.createElement(\"span\",null,\"This field is required!\")},/*#__PURE__*/React.createElement(InputIncDec,{name:\"guest\",value:quantity.guest,onChange:handleOnChange('guest'),increment:()=>handleIncrement('guest'),decrement:()=>handleDecrement('guest')})),/*#__PURE__*/React.createElement(FormControl,{label:\"How many beds can guests use?\",error:errors.bed&&/*#__PURE__*/React.createElement(\"span\",null,\"This field is required!\")},/*#__PURE__*/React.createElement(InputIncDec,{name:\"bed\",value:quantity.bed,onChange:handleOnChange('bed'),increment:()=>handleIncrement('bed'),decrement:()=>handleDecrement('bed')}))),/*#__PURE__*/React.createElement(FormAction,null,/*#__PURE__*/React.createElement(\"div\",{className:\"inner-wrapper\"},/*#__PURE__*/React.createElement(_Button,{type:\"primary\",htmlType:\"submit\"},\"Next\"))));};export default BasicInformation;","map":{"version":3,"sources":["/var/www/html/ami-travel/src/container/AddListing/BasicInformation.js"],"names":["React","useState","useEffect","useStateMachine","useForm","Controller","InputIncDec","FormControl","AddListingAction","FormHeader","Title","FormContent","FormAction","BasicInformation","setStep","action","state","control","register","errors","setValue","handleSubmit","guest","bed","quantity","setQuantity","name","required","handleOnChange","key","event","target","value","handleIncrement","handleDecrement","onSubmit","data","hotelName","pricePerNight","type","pattern","hotelDescription"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useStateMachine } from 'little-state-machine';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Row, Col, Input, InputNumber, Button } from 'antd';\nimport InputIncDec from 'components/UI/InputIncDec/InputIncDec';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport AddListingAction from './AddListingAction';\nimport { FormHeader, Title, FormContent, FormAction } from './AddListing.style';\n\nconst BasicInformation = ({ setStep }) => {\n  const { action, state } = useStateMachine(AddListingAction);\n  const { control, register, errors, setValue, handleSubmit } = useForm();\n  const [quantity, setQuantity] = useState({\n    guest: 0,\n    bed: 0,\n  });\n  useEffect(() => {\n    register({ name: 'guest' }, { required: true });\n    register({ name: 'bed' }, { required: true });\n  }, [register]);\n\n  const handleOnChange = (key) => (event) => {\n    setQuantity({\n      ...quantity,\n      [key]: event.target.value,\n    });\n    setValue([key], event.target.value);\n  };\n\n  const handleIncrement = (key) => {\n    setQuantity({\n      ...quantity,\n      [key]: ++quantity[key],\n    });\n    setValue([key], ++quantity[key]);\n  };\n\n  const handleDecrement = (key) => {\n    if (quantity[key] <= 0) {\n      return false;\n    }\n    setQuantity({\n      ...quantity,\n      [key]: --quantity[key],\n    });\n    setValue([key], --quantity[key]);\n  };\n\n  const onSubmit = (data) => {\n    action(data);\n    setStep(2);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormContent>\n        <FormHeader>\n          <Title>Step 1: Start with the basics</Title>\n        </FormHeader>\n        <Row gutter={30}>\n          <Col sm={12}>\n            <FormControl\n              label=\"Hotel Name\"\n              htmlFor=\"hotelName\"\n              error={errors.hotelName && <span>This field is required!</span>}\n            >\n              <Controller\n                as={<Input />}\n                id=\"hotelName\"\n                name=\"hotelName\"\n                defaultValue={state.data.hotelName}\n                control={control}\n                placeholder=\"Write your hotel name here\"\n                rules={{\n                  required: true,\n                }}\n              />\n            </FormControl>\n          </Col>\n          <Col sm={12}>\n            <FormControl\n              label=\"Price Per Night (USD)\"\n              htmlFor=\"pricePerNight\"\n              error={\n                errors.pricePerNight && (\n                  <>\n                    {errors.pricePerNight?.type === 'required' && (\n                      <span>This field is required!</span>\n                    )}\n                    {errors.pricePerNight?.type === 'pattern' && (\n                      <span>Please enter only number!</span>\n                    )}\n                  </>\n                )\n              }\n            >\n              <Controller\n                as={<InputNumber />}\n                id=\"pricePerNight\"\n                name=\"pricePerNight\"\n                defaultValue={state.data.pricePerNight}\n                control={control}\n                placeholder=\"00.00\"\n                rules={{\n                  required: true,\n                  pattern: /^[0-9]*$/,\n                }}\n              />\n            </FormControl>\n          </Col>\n        </Row>\n        <FormControl\n          label=\"Hotel Description\"\n          htmlFor=\"hotelDescription\"\n          error={\n            errors.hotelDescription && <span>This field is required!</span>\n          }\n        >\n          <Controller\n            as={<Input.TextArea rows={5} />}\n            id=\"hotelDescription\"\n            name=\"hotelDescription\"\n            defaultValue={state.data.hotelDescription}\n            control={control}\n            placeholder=\"Tell people about your hotel, room, location & amenities\"\n            rules={{\n              required: true,\n            }}\n          />\n        </FormControl>\n        <FormControl\n          label=\"How many guests can your hotel accommodate?\"\n          error={errors.guest && <span>This field is required!</span>}\n        >\n          <InputIncDec\n            name=\"guest\"\n            value={quantity.guest}\n            onChange={handleOnChange('guest')}\n            increment={() => handleIncrement('guest')}\n            decrement={() => handleDecrement('guest')}\n          />\n        </FormControl>\n        <FormControl\n          label=\"How many beds can guests use?\"\n          error={errors.bed && <span>This field is required!</span>}\n        >\n          <InputIncDec\n            name=\"bed\"\n            value={quantity.bed}\n            onChange={handleOnChange('bed')}\n            increment={() => handleIncrement('bed')}\n            decrement={() => handleDecrement('bed')}\n          />\n        </FormControl>\n      </FormContent>\n      <FormAction>\n        <div className=\"inner-wrapper\">\n          <Button type=\"primary\" htmlType=\"submit\">\n            Next\n          </Button>\n        </div>\n      </FormAction>\n    </form>\n  );\n};\n\nexport default BasicInformation;\n"]},"metadata":{},"sourceType":"module"}