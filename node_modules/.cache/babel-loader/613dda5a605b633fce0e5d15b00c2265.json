{"ast":null,"code":"import _objectSpread from\"/var/www/html/ami-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Fragment,useEffect}from'react';import Glide from'@glidejs/glide';import'@glidejs/glide/dist/css/glide.core.min.css';import GlideWrapper,{GlideSlideWrapper,ButtonControlWrapper,ButtonWrapper,BulletControlWrapper,BulletButton,DefaultBtn}from'./GlideCarousel.style';const GlideCarousel=({className,children,options,controls,prevButton,nextButton,bullets,numberOfBullets,carouselSelector})=>{// Add all classs to an array.\nconst addAllClasses=['glide'];// className prop checking.\nif(className){addAllClasses.push(className);}// number of bullets loop.\nconst totalBullets=[];for(let i=0;i<numberOfBullets;i++){totalBullets.push(i);}// Load glide.\nuseEffect(()=>{const glide=new Glide(carouselSelector?\"#\".concat(carouselSelector):'#glide',_objectSpread({},options));glide.mount();},[carouselSelector,options]);return/*#__PURE__*/React.createElement(GlideWrapper,{className:addAllClasses.join(' '),id:carouselSelector||'glide'},/*#__PURE__*/React.createElement(\"div\",{className:\"glide__track\",\"data-glide-el\":\"track\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"glide__slides\"},children)),controls&&/*#__PURE__*/React.createElement(ButtonControlWrapper,{className:\"glide__controls\",\"data-glide-el\":\"controls\"},/*#__PURE__*/React.createElement(ButtonWrapper,{className:\"glide__prev--area\",\"data-glide-dir\":\"<\"},prevButton?prevButton:/*#__PURE__*/React.createElement(DefaultBtn,null,\"Prev\")),/*#__PURE__*/React.createElement(ButtonWrapper,{className:\"glide__next--area\",\"data-glide-dir\":\">\"},nextButton?nextButton:/*#__PURE__*/React.createElement(DefaultBtn,null,\"Next\"))),bullets&&/*#__PURE__*/React.createElement(BulletControlWrapper,{className:\"glide__bullets\",\"data-glide-el\":\"controls[nav]\"},/*#__PURE__*/React.createElement(Fragment,null,totalBullets.map(index=>/*#__PURE__*/React.createElement(BulletButton,{key:index,className:\"glide__bullet\",\"data-glide-dir\":\"=\".concat(index)})))));};// Glide Slide wrapper component.\nconst GlideSlide=({children})=>{return/*#__PURE__*/React.createElement(GlideSlideWrapper,{className:\"glide__slide\"},children);};// GlideCarousel default props.\nGlideCarousel.defaultProps={controls:true};export{GlideSlide};export default GlideCarousel;","map":{"version":3,"sources":["/var/www/html/ami-travel/src/components/UI/GlideCarousel/GlideCarousel.js"],"names":["React","Fragment","useEffect","Glide","GlideWrapper","GlideSlideWrapper","ButtonControlWrapper","ButtonWrapper","BulletControlWrapper","BulletButton","DefaultBtn","GlideCarousel","className","children","options","controls","prevButton","nextButton","bullets","numberOfBullets","carouselSelector","addAllClasses","push","totalBullets","i","glide","mount","join","map","index","GlideSlide","defaultProps"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAO,4CAAP,CACA,MAAOC,CAAAA,YAAP,EACEC,iBADF,CAEEC,oBAFF,CAGEC,aAHF,CAIEC,oBAJF,CAKEC,YALF,CAMEC,UANF,KAOO,uBAPP,CASA,KAAMC,CAAAA,aAAa,CAAG,CAAC,CACrBC,SADqB,CAErBC,QAFqB,CAGrBC,OAHqB,CAIrBC,QAJqB,CAKrBC,UALqB,CAMrBC,UANqB,CAOrBC,OAPqB,CAQrBC,eARqB,CASrBC,gBATqB,CAAD,GAUhB,CACJ;AACA,KAAMC,CAAAA,aAAa,CAAG,CAAC,OAAD,CAAtB,CAEA;AACA,GAAIT,SAAJ,CAAe,CACbS,aAAa,CAACC,IAAd,CAAmBV,SAAnB,EACD,CAED;AACA,KAAMW,CAAAA,YAAY,CAAG,EAArB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,eAApB,CAAqCK,CAAC,EAAtC,CAA0C,CACxCD,YAAY,CAACD,IAAb,CAAkBE,CAAlB,EACD,CAED;AACAtB,SAAS,CAAC,IAAM,CACd,KAAMuB,CAAAA,KAAK,CAAG,GAAItB,CAAAA,KAAJ,CACZiB,gBAAgB,YAAOA,gBAAP,EAA4B,QADhC,kBAGPN,OAHO,EAAd,CAMAW,KAAK,CAACC,KAAN,GACD,CARQ,CAQN,CAACN,gBAAD,CAAmBN,OAAnB,CARM,CAAT,CAUA,mBACE,oBAAC,YAAD,EACE,SAAS,CAAEO,aAAa,CAACM,IAAd,CAAmB,GAAnB,CADb,CAEE,EAAE,CAAEP,gBAAgB,EAAI,OAF1B,eAIE,2BAAK,SAAS,CAAC,cAAf,CAA8B,gBAAc,OAA5C,eACE,0BAAI,SAAS,CAAC,eAAd,EAA+BP,QAA/B,CADF,CAJF,CASGE,QAAQ,eACP,oBAAC,oBAAD,EACE,SAAS,CAAC,iBADZ,CAEE,gBAAc,UAFhB,eAIE,oBAAC,aAAD,EAAe,SAAS,CAAC,mBAAzB,CAA6C,iBAAe,GAA5D,EACGC,UAAU,CAAGA,UAAH,cAAgB,oBAAC,UAAD,aAD7B,CAJF,cAOE,oBAAC,aAAD,EAAe,SAAS,CAAC,mBAAzB,CAA6C,iBAAe,GAA5D,EACGC,UAAU,CAAGA,UAAH,cAAgB,oBAAC,UAAD,aAD7B,CAPF,CAVJ,CAwBGC,OAAO,eACN,oBAAC,oBAAD,EACE,SAAS,CAAC,gBADZ,CAEE,gBAAc,eAFhB,eAIE,oBAAC,QAAD,MACGK,YAAY,CAACK,GAAb,CAAiBC,KAAK,eACrB,oBAAC,YAAD,EACE,GAAG,CAAEA,KADP,CAEE,SAAS,CAAC,eAFZ,CAGE,4BAAoBA,KAApB,CAHF,EADD,CADH,CAJF,CAzBJ,CADF,CA2CD,CA/ED,CAiFA;AACA,KAAMC,CAAAA,UAAU,CAAG,CAAC,CAAEjB,QAAF,CAAD,GAAkB,CACnC,mBACE,oBAAC,iBAAD,EAAmB,SAAS,CAAC,cAA7B,EAA6CA,QAA7C,CADF,CAGD,CAJD,CAqCA;AACAF,aAAa,CAACoB,YAAd,CAA6B,CAC3BhB,QAAQ,CAAE,IADiB,CAA7B,CAIA,OAASe,UAAT,EAEA,cAAenB,CAAAA,aAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport GlideWrapper, {\n  GlideSlideWrapper,\n  ButtonControlWrapper,\n  ButtonWrapper,\n  BulletControlWrapper,\n  BulletButton,\n  DefaultBtn,\n} from './GlideCarousel.style';\n\nconst GlideCarousel = ({\n  className,\n  children,\n  options,\n  controls,\n  prevButton,\n  nextButton,\n  bullets,\n  numberOfBullets,\n  carouselSelector,\n}) => {\n  // Add all classs to an array.\n  const addAllClasses = ['glide'];\n\n  // className prop checking.\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  // number of bullets loop.\n  const totalBullets = [];\n  for (let i = 0; i < numberOfBullets; i++) {\n    totalBullets.push(i);\n  }\n\n  // Load glide.\n  useEffect(() => {\n    const glide = new Glide(\n      carouselSelector ? `#${carouselSelector}` : '#glide',\n      {\n        ...options,\n      }\n    );\n    glide.mount();\n  }, [carouselSelector, options]);\n\n  return (\n    <GlideWrapper\n      className={addAllClasses.join(' ')}\n      id={carouselSelector || 'glide'}\n    >\n      <div className=\"glide__track\" data-glide-el=\"track\">\n        <ul className=\"glide__slides\">{children}</ul>\n      </div>\n\n      {/** if controls prop true then show controls nav. */}\n      {controls && (\n        <ButtonControlWrapper\n          className=\"glide__controls\"\n          data-glide-el=\"controls\"\n        >\n          <ButtonWrapper className=\"glide__prev--area\" data-glide-dir=\"<\">\n            {prevButton ? prevButton : <DefaultBtn>Prev</DefaultBtn>}\n          </ButtonWrapper>\n          <ButtonWrapper className=\"glide__next--area\" data-glide-dir=\">\">\n            {nextButton ? nextButton : <DefaultBtn>Next</DefaultBtn>}\n          </ButtonWrapper>\n        </ButtonControlWrapper>\n      )}\n\n      {/** if bullets prop true then show bullets nav. */}\n      {bullets && (\n        <BulletControlWrapper\n          className=\"glide__bullets\"\n          data-glide-el=\"controls[nav]\"\n        >\n          <Fragment>\n            {totalBullets.map(index => (\n              <BulletButton\n                key={index}\n                className=\"glide__bullet\"\n                data-glide-dir={`=${index}`}\n              />\n            ))}\n          </Fragment>\n        </BulletControlWrapper>\n      )}\n    </GlideWrapper>\n  );\n};\n\n// Glide Slide wrapper component.\nconst GlideSlide = ({ children }) => {\n  return (\n    <GlideSlideWrapper className=\"glide__slide\">{children}</GlideSlideWrapper>\n  );\n};\n\nGlideCarousel.propTypes = {\n  /** className of the GlideCarousel. */\n  className: PropTypes.string,\n\n  /** Children. */\n  children: PropTypes.element,\n\n  /** You can add your custom glid options using this prop. */\n  options: PropTypes.object,\n\n  /** Hide || show controls nav. */\n  controls: PropTypes.bool,\n\n  /** Hide || show bullets nav. */\n  bullets: PropTypes.bool,\n\n  /** This prop only take your slider / carousel / testimonials data length. [Note: if \"bullets\" props is set TRUE, then \"numberOfBullets\" must be added] */\n  numberOfBullets: PropTypes.number,\n\n  /** Set previous button for glide carousel. */\n  prevButton: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n  /** Set next button for glide carousel. */\n  nextButton: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nGlideSlide.propTypes = {\n  /** Children. */\n  children: PropTypes.element,\n};\n\n// GlideCarousel default props.\nGlideCarousel.defaultProps = {\n  controls: true,\n};\n\nexport { GlideSlide };\n\nexport default GlideCarousel;\n"]},"metadata":{},"sourceType":"module"}