{"ast":null,"code":"import React from'react';import NavbarWrapper,{Container,LogoArea,MenuArea,AvatarWrapper,AuthWrapper,MenuWrapper}from'./Navbar.style';const Navbar=({className,logo,avatar,navMenu,authMenu,profileMenu,isLogin,headerType,searchComponent,location,searchVisibility})=>{const addAllClasses=['navbar'];if(className){addAllClasses.push(className);}if(headerType){addAllClasses.push(\"is_\".concat(headerType));}return/*#__PURE__*/React.createElement(NavbarWrapper,{className:addAllClasses.join(' ')},/*#__PURE__*/React.createElement(Container,null,logo||searchVisibility?/*#__PURE__*/React.createElement(LogoArea,null,logo,!searchVisibility&&location.pathname==='/'?null:searchComponent):null,/*#__PURE__*/React.createElement(MenuArea,null,navMenu&&/*#__PURE__*/React.createElement(MenuWrapper,{className:\"main_menu\"},navMenu),isLogin&&avatar?/*#__PURE__*/React.createElement(AvatarWrapper,null,profileMenu):authMenu&&/*#__PURE__*/React.createElement(AuthWrapper,{className:\"auth_menu\"},authMenu))));};export default Navbar;","map":{"version":3,"sources":["/var/www/html/ami-travel/src/components/Navbar/Navbar.js"],"names":["React","NavbarWrapper","Container","LogoArea","MenuArea","AvatarWrapper","AuthWrapper","MenuWrapper","Navbar","className","logo","avatar","navMenu","authMenu","profileMenu","isLogin","headerType","searchComponent","location","searchVisibility","addAllClasses","push","join","pathname"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,aAAP,EACEC,SADF,CAEEC,QAFF,CAGEC,QAHF,CAIEC,aAJF,CAKEC,WALF,CAMEC,WANF,KAOO,gBAPP,CASA,KAAMC,CAAAA,MAAM,CAAG,CAAC,CACdC,SADc,CAEdC,IAFc,CAGdC,MAHc,CAIdC,OAJc,CAKdC,QALc,CAMdC,WANc,CAOdC,OAPc,CAQdC,UARc,CASdC,eATc,CAUdC,QAVc,CAWdC,gBAXc,CAAD,GAYT,CACJ,KAAMC,CAAAA,aAAa,CAAG,CAAC,QAAD,CAAtB,CACA,GAAIX,SAAJ,CAAe,CACbW,aAAa,CAACC,IAAd,CAAmBZ,SAAnB,EACD,CACD,GAAIO,UAAJ,CAAgB,CACdI,aAAa,CAACC,IAAd,cAAyBL,UAAzB,GACD,CAED,mBACE,oBAAC,aAAD,EAAe,SAAS,CAAEI,aAAa,CAACE,IAAd,CAAmB,GAAnB,CAA1B,eACE,oBAAC,SAAD,MACGZ,IAAI,EAAIS,gBAAR,cACC,oBAAC,QAAD,MACGT,IADH,CAEG,CAACS,gBAAD,EAAqBD,QAAQ,CAACK,QAAT,GAAsB,GAA3C,CACG,IADH,CAEGN,eAJN,CADD,CAOG,IARN,cASE,oBAAC,QAAD,MACGL,OAAO,eACN,oBAAC,WAAD,EAAa,SAAS,CAAC,WAAvB,EAAoCA,OAApC,CAFJ,CAIGG,OAAO,EAAIJ,MAAX,cACC,oBAAC,aAAD,MAAgBG,WAAhB,CADD,CAGCD,QAAQ,eACN,oBAAC,WAAD,EAAa,SAAS,CAAC,WAAvB,EAAoCA,QAApC,CARN,CATF,CADF,CADF,CA0BD,CA/CD,CA0DA,cAAeL,CAAAA,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarWrapper, {\n  Container,\n  LogoArea,\n  MenuArea,\n  AvatarWrapper,\n  AuthWrapper,\n  MenuWrapper,\n} from './Navbar.style';\n\nconst Navbar = ({\n  className,\n  logo,\n  avatar,\n  navMenu,\n  authMenu,\n  profileMenu,\n  isLogin,\n  headerType,\n  searchComponent,\n  location,\n  searchVisibility,\n}) => {\n  const addAllClasses = ['navbar'];\n  if (className) {\n    addAllClasses.push(className);\n  }\n  if (headerType) {\n    addAllClasses.push(`is_${headerType}`);\n  }\n\n  return (\n    <NavbarWrapper className={addAllClasses.join(' ')}>\n      <Container>\n        {logo || searchVisibility ? (\n          <LogoArea>\n            {logo}\n            {!searchVisibility && location.pathname === '/'\n              ? null\n              : searchComponent}\n          </LogoArea>\n        ) : null}\n        <MenuArea>\n          {navMenu && (\n            <MenuWrapper className=\"main_menu\">{navMenu}</MenuWrapper>\n          )}\n          {isLogin && avatar ? (\n            <AvatarWrapper>{profileMenu}</AvatarWrapper>\n          ) : (\n            authMenu && (\n              <AuthWrapper className=\"auth_menu\">{authMenu}</AuthWrapper>\n            )\n          )}\n        </MenuArea>\n      </Container>\n    </NavbarWrapper>\n  );\n};\n\nNavbar.propTypes = {\n  className: PropTypes.string,\n  navMenu: PropTypes.element,\n  avatar: PropTypes.element,\n  authMenu: PropTypes.element,\n  isLogin: PropTypes.bool,\n  headerType: PropTypes.oneOf(['transparent', 'default']),\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}