{"ast":null,"code":"import _slicedToArray from\"/var/www/html/ami/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useHistory}from'react-router-dom';import axios from'axios';import swal from'sweetalert';export const AuthContext=React.createContext();const fakeUserData={id:1,name:'Jhon Doe',avatar:'http://s3.amazonaws.com/redqteam.com/isomorphic-reloaded-image/profilepic.png',roles:['USER','ADMIN']};const AuthProvider=props=>{let history=useHistory();const _useState=useState(false),_useState2=_slicedToArray(_useState,2),loggedIn=_useState2[0],setLoggedIn=_useState2[1];const _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),user=_useState4[0],setUser=_useState4[1];const signIn=params=>{console.log(params,'sign in form Props');setUser(fakeUserData);setLoggedIn(true);history.push(\"/\");};const signUp=params=>{axios.defaults.headers.post['Content-Type']='application/x-www-form-urlencoded; charset=UTF-8';axios.defaults.headers.post['Access-Control-Allow-Origin']='*';axios.defaults.headers.post['Access-Control-Allow-Headers']='Origin, X-Requested-With, Content-Type, Accept';axios.post('https://backend-ami.herokuapp.com/muthowif',{first_name:params.namalengkap,phone:params.telp,email:params.email,password:params.password}).then(response=>{const messages=response&&response.data&&response.data.messages;swal(\"Terima Kasih\",messages,\"success\").then(()=>{history.go(0);});console.log('response',response);}).catch(function(error){console.log('error',error);});// console.log(params, 'sign up form Props');\n};const logOut=()=>{setUser(null);setLoggedIn(false);};return/*#__PURE__*/React.createElement(AuthContext.Provider,{value:{loggedIn,logOut,signIn,signUp,user}},/*#__PURE__*/React.createElement(React.Fragment,null,props.children));};export default AuthProvider;","map":{"version":3,"sources":["/var/www/html/ami/src/context/AuthProvider.js"],"names":["React","useState","useHistory","axios","swal","AuthContext","createContext","fakeUserData","id","name","avatar","roles","AuthProvider","props","history","loggedIn","setLoggedIn","user","setUser","signIn","params","console","log","push","signUp","defaults","headers","post","first_name","namalengkap","phone","telp","email","password","then","response","messages","data","go","catch","error","logOut","children"],"mappings":"wIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAGL,KAAK,CAACM,aAAN,EAApB,CAEP,KAAMC,CAAAA,YAAY,CAAG,CACnBC,EAAE,CAAE,CADe,CAEnBC,IAAI,CAAE,UAFa,CAGnBC,MAAM,CACJ,+EAJiB,CAKnBC,KAAK,CAAE,CAAC,MAAD,CAAS,OAAT,CALY,CAArB,CAQA,KAAMC,CAAAA,YAAY,CAAIC,KAAD,EAAW,CAC9B,GAAIC,CAAAA,OAAO,CAAGZ,UAAU,EAAxB,CAD8B,gBAEED,QAAQ,CAAC,KAAD,CAFV,wCAEvBc,QAFuB,eAEbC,WAFa,gCAGNf,QAAQ,CAAC,EAAD,CAHF,yCAGvBgB,IAHuB,eAGjBC,OAHiB,eAK9B,KAAMC,CAAAA,MAAM,CAAIC,MAAD,EAAY,CACzBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAoB,oBAApB,EACAF,OAAO,CAACX,YAAD,CAAP,CACAS,WAAW,CAAC,IAAD,CAAX,CACAF,OAAO,CAACS,IAAR,MACD,CALD,CAOA,KAAMC,CAAAA,MAAM,CAAIJ,MAAD,EAAY,CACzBjB,KAAK,CAACsB,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,EAA8C,kDAA9C,CACAxB,KAAK,CAACsB,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,6BAA5B,EAA6D,GAA7D,CACAxB,KAAK,CAACsB,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,8BAA5B,EAA8D,gDAA9D,CACAxB,KAAK,CAACwB,IAAN,CAAW,4CAAX,CAAyD,CACvDC,UAAU,CAAER,MAAM,CAACS,WADoC,CAEvDC,KAAK,CAAEV,MAAM,CAACW,IAFyC,CAGvDC,KAAK,CAAEZ,MAAM,CAACY,KAHyC,CAIvDC,QAAQ,CAAEb,MAAM,CAACa,QAJsC,CAAzD,EAMCC,IAND,CAMOC,QAAD,EAAc,CAClB,KAAMC,CAAAA,QAAQ,CAAGD,QAAQ,EAAIA,QAAQ,CAACE,IAArB,EAA6BF,QAAQ,CAACE,IAAT,CAAcD,QAA5D,CACAhC,IAAI,CAAC,cAAD,CAAiBgC,QAAjB,CAA2B,SAA3B,CAAJ,CAA0CF,IAA1C,CAA+C,IAAM,CACnDpB,OAAO,CAACwB,EAAR,CAAW,CAAX,EACD,CAFD,EAGAjB,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBa,QAAxB,EACD,CAZD,EAaCI,KAbD,CAaO,SAAUC,KAAV,CAAiB,CACtBnB,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBkB,KAArB,EACD,CAfD,EAgBA;AACD,CArBD,CAuBA,KAAMC,CAAAA,MAAM,CAAG,IAAM,CACnBvB,OAAO,CAAC,IAAD,CAAP,CACAF,WAAW,CAAC,KAAD,CAAX,CACD,CAHD,CAKA,mBACE,oBAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CACLD,QADK,CAEL0B,MAFK,CAGLtB,MAHK,CAILK,MAJK,CAKLP,IALK,CADT,eASE,wCAAGJ,KAAK,CAAC6B,QAAT,CATF,CADF,CAaD,CArDD,CAuDA,cAAe9B,CAAAA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nexport const AuthContext = React.createContext();\n\nconst fakeUserData = {\n  id: 1,\n  name: 'Jhon Doe',\n  avatar:\n    'http://s3.amazonaws.com/redqteam.com/isomorphic-reloaded-image/profilepic.png',\n  roles: ['USER', 'ADMIN'],\n};\n\nconst AuthProvider = (props) => {\n  let history = useHistory();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  const signIn = (params) => {\n    console.log(params, 'sign in form Props');\n    setUser(fakeUserData);\n    setLoggedIn(true);\n    history.push(`/`);\n  };\n\n  const signUp = (params) => {\n    axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n    axios.defaults.headers.post['Access-Control-Allow-Headers'] = 'Origin, X-Requested-With, Content-Type, Accept';\n    axios.post('https://backend-ami.herokuapp.com/muthowif', {\n      first_name: params.namalengkap,\n      phone: params.telp,\n      email: params.email,\n      password: params.password\n    })\n    .then((response) => {\n      const messages = response && response.data && response.data.messages;\n      swal(\"Terima Kasih\", messages, \"success\").then(() => {\n        history.go(0);\n      });\n      console.log('response', response);\n    })\n    .catch(function (error) {\n      console.log('error', error);\n    });\n    // console.log(params, 'sign up form Props');\n  };\n\n  const logOut = () => {\n    setUser(null);\n    setLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        loggedIn,\n        logOut,\n        signIn,\n        signUp,\n        user,\n      }}\n    >\n      <>{props.children}</>\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"]},"metadata":{},"sourceType":"module"}