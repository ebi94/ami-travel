{"ast":null,"code":"import\"antd/es/button/style/css\";import _Button from\"antd/es/button\";import\"antd/es/checkbox/style/css\";import _Checkbox from\"antd/es/checkbox\";import\"antd/es/row/style/css\";import _Row from\"antd/es/row\";import\"antd/es/col/style/css\";import _Col from\"antd/es/col\";import\"antd/es/input/style/css\";import _Input from\"antd/es/input\";import React from'react';import{useForm,Controller}from'react-hook-form';import FormControl from'../UI/FormControl/FormControl';const ContactForm=()=>{var _errors$email,_errors$email2,_errors$phone,_errors$phone2;const _useForm=useForm({mode:'onChange'}),control=_useForm.control,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit;const onSubmit=data=>console.log(data);return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(FormControl,{label:\"Your message\",htmlFor:\"message\",error:errors.message&&/*#__PURE__*/React.createElement(\"span\",null,\"This field is required!\")},/*#__PURE__*/React.createElement(Controller,{as:/*#__PURE__*/React.createElement(_Input.TextArea,{rows:5}),id:\"message\",name:\"message\",defaultValue:\"\",control:control,rules:{required:true}})),/*#__PURE__*/React.createElement(_Row,{gutter:30},/*#__PURE__*/React.createElement(_Col,{md:12},/*#__PURE__*/React.createElement(FormControl,{label:\"Your email\",htmlFor:\"email\",error:errors.email&&/*#__PURE__*/React.createElement(React.Fragment,null,((_errors$email=errors.email)===null||_errors$email===void 0?void 0:_errors$email.type)==='required'&&/*#__PURE__*/React.createElement(\"span\",null,\"This field is required!\"),((_errors$email2=errors.email)===null||_errors$email2===void 0?void 0:_errors$email2.type)==='pattern'&&/*#__PURE__*/React.createElement(\"span\",null,\"Please enter a valid email address!\"))},/*#__PURE__*/React.createElement(Controller,{as:/*#__PURE__*/React.createElement(_Input,null),type:\"email\",id:\"email\",name:\"email\",defaultValue:\"\",control:control,rules:{required:true,pattern:/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/}}))),/*#__PURE__*/React.createElement(_Col,{md:12},/*#__PURE__*/React.createElement(FormControl,{label:\"Your contact number\",htmlFor:\"phone\",error:errors.phone&&/*#__PURE__*/React.createElement(React.Fragment,null,((_errors$phone=errors.phone)===null||_errors$phone===void 0?void 0:_errors$phone.type)==='required'&&/*#__PURE__*/React.createElement(\"span\",null,\"This field is required!\"),((_errors$phone2=errors.phone)===null||_errors$phone2===void 0?void 0:_errors$phone2.type)==='pattern'&&/*#__PURE__*/React.createElement(\"span\",null,\"Please enter your valid number!\"))},/*#__PURE__*/React.createElement(Controller,{as:/*#__PURE__*/React.createElement(_Input,null),defaultValue:\"\",control:control,id:\"phone\",name:\"phone\",rules:{required:true,pattern:/^[0-9]*$/}})))),/*#__PURE__*/React.createElement(FormControl,null,/*#__PURE__*/React.createElement(Controller,{name:\"cookie\",onChange:([e])=>{return e.target.checked;},as:/*#__PURE__*/React.createElement(_Checkbox,null,\"Save my email in the browser fro the next time I contact\"),control:control})),/*#__PURE__*/React.createElement(FormControl,null,/*#__PURE__*/React.createElement(_Button,{type:\"primary\",htmlType:\"submit\",size:\"large\"},\"Submit\")));};export default ContactForm;","map":{"version":3,"sources":["/var/www/html/ami/src/components/ContactForm/ContactFrom.js"],"names":["React","useForm","Controller","FormControl","ContactForm","mode","control","errors","handleSubmit","onSubmit","data","console","log","message","required","email","type","pattern","phone","e","target","checked"],"mappings":"0UAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,CAAkBC,UAAlB,KAAoC,iBAApC,CAEA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CAEA,KAAMC,CAAAA,WAAW,CAAG,IAAM,8EACkBH,OAAO,CAAC,CAChDI,IAAI,CAAE,UAD0C,CAAD,CADzB,CAChBC,OADgB,UAChBA,OADgB,CACPC,MADO,UACPA,MADO,CACCC,YADD,UACCA,YADD,CAIxB,KAAMC,CAAAA,QAAQ,CAAIC,IAAD,EAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B,CAEA,mBACE,4BAAM,QAAQ,CAAEF,YAAY,CAACC,QAAD,CAA5B,eACE,oBAAC,WAAD,EACE,KAAK,CAAC,cADR,CAEE,OAAO,CAAC,SAFV,CAGE,KAAK,CAAEF,MAAM,CAACM,OAAP,eAAkB,0DAH3B,eAKE,oBAAC,UAAD,EACE,EAAE,cAAE,2BAAO,QAAP,EAAgB,IAAI,CAAE,CAAtB,EADN,CAEE,EAAE,CAAC,SAFL,CAGE,IAAI,CAAC,SAHP,CAIE,YAAY,CAAC,EAJf,CAKE,OAAO,CAAEP,OALX,CAME,KAAK,CAAE,CAAEQ,QAAQ,CAAE,IAAZ,CANT,EALF,CADF,cAeE,0BAAK,MAAM,CAAE,EAAb,eACE,0BAAK,EAAE,CAAE,EAAT,eACE,oBAAC,WAAD,EACE,KAAK,CAAC,YADR,CAEE,OAAO,CAAC,OAFV,CAGE,KAAK,CACHP,MAAM,CAACQ,KAAP,eACE,wCACG,gBAAAR,MAAM,CAACQ,KAAP,sDAAcC,IAAd,IAAuB,UAAvB,eACC,0DAFJ,CAIG,iBAAAT,MAAM,CAACQ,KAAP,wDAAcC,IAAd,IAAuB,SAAvB,eACC,sEALJ,CALN,eAgBE,oBAAC,UAAD,EACE,EAAE,cAAE,gCADN,CAEE,IAAI,CAAC,OAFP,CAGE,EAAE,CAAC,OAHL,CAIE,IAAI,CAAC,OAJP,CAKE,YAAY,CAAC,EALf,CAME,OAAO,CAAEV,OANX,CAOE,KAAK,CAAE,CACLQ,QAAQ,CAAE,IADL,CAELG,OAAO,CAAE,6CAFJ,CAPT,EAhBF,CADF,CADF,cAgCE,0BAAK,EAAE,CAAE,EAAT,eACE,oBAAC,WAAD,EACE,KAAK,CAAC,qBADR,CAEE,OAAO,CAAC,OAFV,CAGE,KAAK,CACHV,MAAM,CAACW,KAAP,eACE,wCACG,gBAAAX,MAAM,CAACW,KAAP,sDAAcF,IAAd,IAAuB,UAAvB,eACC,0DAFJ,CAIG,iBAAAT,MAAM,CAACW,KAAP,wDAAcF,IAAd,IAAuB,SAAvB,eACC,kEALJ,CALN,eAgBE,oBAAC,UAAD,EACE,EAAE,cAAE,gCADN,CAEE,YAAY,CAAC,EAFf,CAGE,OAAO,CAAEV,OAHX,CAIE,EAAE,CAAC,OAJL,CAKE,IAAI,CAAC,OALP,CAME,KAAK,CAAE,CAAEQ,QAAQ,CAAE,IAAZ,CAAkBG,OAAO,CAAE,UAA3B,CANT,EAhBF,CADF,CAhCF,CAfF,cA2EE,oBAAC,WAAD,mBACE,oBAAC,UAAD,EACE,IAAI,CAAC,QADP,CAEE,QAAQ,CAAE,CAAC,CAACE,CAAD,CAAD,GAAS,CACjB,MAAOA,CAAAA,CAAC,CAACC,MAAF,CAASC,OAAhB,CACD,CAJH,CAKE,EAAE,cACA,8FANJ,CAUE,OAAO,CAAEf,OAVX,EADF,CA3EF,cAyFE,oBAAC,WAAD,mBACE,6BAAQ,IAAI,CAAC,SAAb,CAAuB,QAAQ,CAAC,QAAhC,CAAyC,IAAI,CAAC,OAA9C,WADF,CAzFF,CADF,CAiGD,CAvGD,CAyGA,cAAeF,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Input, Checkbox, Button, Row, Col } from 'antd';\nimport FormControl from '../UI/FormControl/FormControl';\n\nconst ContactForm = () => {\n  const { control, errors, handleSubmit } = useForm({\n    mode: 'onChange',\n  });\n  const onSubmit = (data) => console.log(data);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl\n        label=\"Your message\"\n        htmlFor=\"message\"\n        error={errors.message && <span>This field is required!</span>}\n      >\n        <Controller\n          as={<Input.TextArea rows={5} />}\n          id=\"message\"\n          name=\"message\"\n          defaultValue=\"\"\n          control={control}\n          rules={{ required: true }}\n        />\n      </FormControl>\n      <Row gutter={30}>\n        <Col md={12}>\n          <FormControl\n            label=\"Your email\"\n            htmlFor=\"email\"\n            error={\n              errors.email && (\n                <>\n                  {errors.email?.type === 'required' && (\n                    <span>This field is required!</span>\n                  )}\n                  {errors.email?.type === 'pattern' && (\n                    <span>Please enter a valid email address!</span>\n                  )}\n                </>\n              )\n            }\n          >\n            <Controller\n              as={<Input />}\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              defaultValue=\"\"\n              control={control}\n              rules={{\n                required: true,\n                pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n              }}\n            />\n          </FormControl>\n        </Col>\n        <Col md={12}>\n          <FormControl\n            label=\"Your contact number\"\n            htmlFor=\"phone\"\n            error={\n              errors.phone && (\n                <>\n                  {errors.phone?.type === 'required' && (\n                    <span>This field is required!</span>\n                  )}\n                  {errors.phone?.type === 'pattern' && (\n                    <span>Please enter your valid number!</span>\n                  )}\n                </>\n              )\n            }\n          >\n            <Controller\n              as={<Input />}\n              defaultValue=\"\"\n              control={control}\n              id=\"phone\"\n              name=\"phone\"\n              rules={{ required: true, pattern: /^[0-9]*$/ }}\n            />\n          </FormControl>\n        </Col>\n      </Row>\n      <FormControl>\n        <Controller\n          name=\"cookie\"\n          onChange={([e]) => {\n            return e.target.checked;\n          }}\n          as={\n            <Checkbox>\n              Save my email in the browser fro the next time I contact\n            </Checkbox>\n          }\n          control={control}\n        />\n      </FormControl>\n      <FormControl>\n        <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n          Submit\n        </Button>\n      </FormControl>\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}