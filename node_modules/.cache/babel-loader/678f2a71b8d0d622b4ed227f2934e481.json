{"ast":null,"code":"import _slicedToArray from\"/var/www/html/ami/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// The portal element is inserted in the DOM tree after\n// the Modal's children are mounted, meaning that children\n// will be mounted on a detached DOM node. If a child\n// component requires to be attached to the DOM tree\n// immediately when mounted, for example to measure a\n// DOM node, or uses 'autoFocus' in a descendant, add\n// state to Modal and only render the children when Modal\n// is inserted in the DOM tree.\nimport{useState,useEffect}from'react';import ReactDOM from'react-dom';export default function Portal({children,rendererId}){const _useState=useState(document.createElement('div')),_useState2=_slicedToArray(_useState,1),containerEl=_useState2[0];useEffect(()=>{let portalRoot=document.getElementById(rendererId)||document.body;portalRoot.appendChild(containerEl);return()=>portalRoot.removeChild(containerEl);});return ReactDOM.createPortal(children,containerEl);}","map":{"version":3,"sources":["/var/www/html/ami/src/components/UI/Portal/Portal.js"],"names":["useState","useEffect","ReactDOM","Portal","children","rendererId","document","createElement","containerEl","portalRoot","getElementById","body","appendChild","removeChild","createPortal"],"mappings":"wIAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CAEA,cAAe,SAASC,CAAAA,MAAT,CAAgB,CAAEC,QAAF,CAAYC,UAAZ,CAAhB,CAA0C,iBACjCL,QAAQ,CAACM,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAD,CADyB,wCAChDC,WADgD,eAEvDP,SAAS,CAAC,IAAM,CACd,GAAIQ,CAAAA,UAAU,CAAGH,QAAQ,CAACI,cAAT,CAAwBL,UAAxB,GAAuCC,QAAQ,CAACK,IAAjE,CACAF,UAAU,CAACG,WAAX,CAAuBJ,WAAvB,EACA,MAAO,IAAMC,UAAU,CAACI,WAAX,CAAuBL,WAAvB,CAAb,CACD,CAJQ,CAAT,CAKA,MAAON,CAAAA,QAAQ,CAACY,YAAT,CAAsBV,QAAtB,CAAgCI,WAAhC,CAAP,CACD","sourcesContent":["// The portal element is inserted in the DOM tree after\n// the Modal's children are mounted, meaning that children\n// will be mounted on a detached DOM node. If a child\n// component requires to be attached to the DOM tree\n// immediately when mounted, for example to measure a\n// DOM node, or uses 'autoFocus' in a descendant, add\n// state to Modal and only render the children when Modal\n// is inserted in the DOM tree.\n\nimport { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default function Portal({ children, rendererId }) {\n  const [containerEl] = useState(document.createElement('div'));\n  useEffect(() => {\n    let portalRoot = document.getElementById(rendererId) || document.body;\n    portalRoot.appendChild(containerEl);\n    return () => portalRoot.removeChild(containerEl);\n  });\n  return ReactDOM.createPortal(children, containerEl);\n}\n"]},"metadata":{},"sourceType":"module"}