{"ast":null,"code":"import\"antd/es/button/style/css\";import _Button from\"antd/es/button\";import React from'react';import Box from'components/UI/Box/Box';import Text from'components/UI/Text/Text';import ProductCard from'../ProductCard/ProductCard';const LoadMore=({handleLoadMore,showButton,buttonText,loading,loadMoreComponent,loadMoreStyle})=>{return!!showButton&&/*#__PURE__*/React.createElement(Box,Object.assign({className:\"loadmore_wrapper\"},loadMoreStyle),loadMoreComponent?loadMoreComponent:/*#__PURE__*/React.createElement(_Button,{loading:loading,onClick:handleLoadMore},buttonText||'Load More'));};export default function SectionGrid({data=[],totalItem,limit,columnWidth,paginationComponent,handleLoadMore,loadMoreComponent,placeholder,loading,buttonText,rowStyle,columnStyle,loadMoreStyle,link}){const n=limit?Number(limit):1;const limits=Array(n).fill(0);let showButton=data.length<totalItem;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Box,Object.assign({className:\"grid_wrapper\"},rowStyle),data&&data.length?data.map(item=>{return/*#__PURE__*/React.createElement(Box,Object.assign({className:\"grid_column\",width:columnWidth,key:item.id},columnStyle),/*#__PURE__*/React.createElement(ProductCard,Object.assign({link:link},item)));}):null,loading&&limits.map((_,index)=>/*#__PURE__*/React.createElement(Box,Object.assign({className:\"grid_column\",width:columnWidth,key:index},columnStyle),placeholder?placeholder:/*#__PURE__*/React.createElement(Text,{content:\"Loading ...\"})))),showButton&&/*#__PURE__*/React.createElement(LoadMore,{showButton:showButton,handleLoadMore:handleLoadMore,loading:loading,buttonText:buttonText,loadMoreComponent:loadMoreComponent,loadMoreStyle:loadMoreStyle}),paginationComponent&&/*#__PURE__*/React.createElement(Box,{className:\"pagination_wrapper\"},paginationComponent));}SectionGrid.defaultProps={rowStyle:{flexBox:true,flexWrap:'wrap',mr:['-10px','-10px','-10px','-10px','-10px','-15px'],ml:['-10px','-10px','-10px','-10px','-10px','-15px']},columnStyle:{pr:['10px','10px','10px','10px','10px','15px'],pl:['10px','10px','10px','10px','10px','15px']},loadMoreStyle:{flexBox:true,justifyContent:'center',mt:'1rem'}};","map":{"version":3,"sources":["/var/www/html/ami/src/components/SectionGrid/SectionGrid.js"],"names":["React","Box","Text","ProductCard","LoadMore","handleLoadMore","showButton","buttonText","loading","loadMoreComponent","loadMoreStyle","SectionGrid","data","totalItem","limit","columnWidth","paginationComponent","placeholder","rowStyle","columnStyle","link","n","Number","limits","Array","fill","length","map","item","id","_","index","defaultProps","flexBox","flexWrap","mr","ml","pr","pl","justifyContent","mt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport Box from 'components/UI/Box/Box';\nimport Text from 'components/UI/Text/Text';\nimport ProductCard from '../ProductCard/ProductCard';\nconst LoadMore = ({\n  handleLoadMore,\n  showButton,\n  buttonText,\n  loading,\n  loadMoreComponent,\n  loadMoreStyle,\n}) => {\n  return (\n    !!showButton && (\n      <Box className=\"loadmore_wrapper\" {...loadMoreStyle}>\n        {loadMoreComponent ? (\n          loadMoreComponent\n        ) : (\n          <Button loading={loading} onClick={handleLoadMore}>\n            {buttonText || 'Load More'}\n          </Button>\n        )}\n      </Box>\n    )\n  );\n};\n\nexport default function SectionGrid({\n  data = [],\n  totalItem,\n  limit,\n  columnWidth,\n  paginationComponent,\n  handleLoadMore,\n  loadMoreComponent,\n  placeholder,\n  loading,\n  buttonText,\n  rowStyle,\n  columnStyle,\n  loadMoreStyle,\n  link,\n}) {\n  const n = limit ? Number(limit) : 1;\n  const limits = Array(n).fill(0);\n\n  let showButton = data.length < totalItem;\n\n  return (\n    <>\n      <Box className=\"grid_wrapper\" {...rowStyle}>\n        {data && data.length\n          ? data.map((item) => {\n              return (\n                <Box\n                  className=\"grid_column\"\n                  width={columnWidth}\n                  key={item.id}\n                  {...columnStyle}\n                >\n                  <ProductCard link={link} {...item} />\n                </Box>\n              );\n            })\n          : null}\n\n        {loading &&\n          limits.map((_, index) => (\n            <Box\n              className=\"grid_column\"\n              width={columnWidth}\n              key={index}\n              {...columnStyle}\n            >\n              {placeholder ? placeholder : <Text content=\"Loading ...\" />}\n            </Box>\n          ))}\n      </Box>\n\n      {showButton && (\n        <LoadMore\n          showButton={showButton}\n          handleLoadMore={handleLoadMore}\n          loading={loading}\n          buttonText={buttonText}\n          loadMoreComponent={loadMoreComponent}\n          loadMoreStyle={loadMoreStyle}\n        />\n      )}\n      {paginationComponent && (\n        <Box className=\"pagination_wrapper\">{paginationComponent}</Box>\n      )}\n    </>\n  );\n}\n\nSectionGrid.propTypes = {\n  data: PropTypes.array.isRequired,\n  totalItem: PropTypes.number,\n  columnWidth: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n  paginationComponent: PropTypes.element,\n  handleLoadMore: PropTypes.func,\n  loadMoreComponent: PropTypes.element,\n  placeholder: PropTypes.element,\n  loading: PropTypes.bool,\n  limit: PropTypes.number,\n  buttonText: PropTypes.string,\n  rowStyle: PropTypes.object,\n  columnStyle: PropTypes.object,\n  loadMoreStyle: PropTypes.object,\n};\n\nSectionGrid.defaultProps = {\n  rowStyle: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    mr: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\n    ml: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\n  },\n  columnStyle: {\n    pr: ['10px', '10px', '10px', '10px', '10px', '15px'],\n    pl: ['10px', '10px', '10px', '10px', '10px', '15px'],\n  },\n  loadMoreStyle: {\n    flexBox: true,\n    justifyContent: 'center',\n    mt: '1rem',\n  },\n};\n"]},"metadata":{},"sourceType":"module"}