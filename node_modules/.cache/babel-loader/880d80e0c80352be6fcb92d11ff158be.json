{"ast":null,"code":"import _objectWithoutProperties from\"/var/www/html/ami-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Link}from'react-router-dom';import styled from'styled-components';import{fontFamily,fontWeight,textAlign,lineHeight,letterSpacing}from'styled-system';import{base,themed}from'../Base';const LinkWrapper=styled(Link)(base,fontFamily,fontWeight,textAlign,lineHeight,letterSpacing,themed('TextLink'));const TextLink=(_ref)=>{let link=_ref.link,icon=_ref.icon,content=_ref.content,props=_objectWithoutProperties(_ref,[\"link\",\"icon\",\"content\"]);return/*#__PURE__*/React.createElement(LinkWrapper,Object.assign({to:link},props),icon,\" \",content);};export default TextLink;","map":{"version":3,"sources":["/var/www/html/ami-travel/src/components/UI/TextLink/TextLink.js"],"names":["React","Link","styled","fontFamily","fontWeight","textAlign","lineHeight","letterSpacing","base","themed","LinkWrapper","TextLink","link","icon","content","props"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OACEC,UADF,CAEEC,UAFF,CAGEC,SAHF,CAIEC,UAJF,CAKEC,aALF,KAMO,eANP,CAOA,OAASC,IAAT,CAAeC,MAAf,KAA6B,SAA7B,CAEA,KAAMC,CAAAA,WAAW,CAAGR,MAAM,CAACD,IAAD,CAAN,CAClBO,IADkB,CAElBL,UAFkB,CAGlBC,UAHkB,CAIlBC,SAJkB,CAKlBC,UALkB,CAMlBC,aANkB,CAOlBE,MAAM,CAAC,UAAD,CAPY,CAApB,CAUA,KAAME,CAAAA,QAAQ,CAAG,QAAuC,IAApCC,CAAAA,IAAoC,MAApCA,IAAoC,CAA9BC,IAA8B,MAA9BA,IAA8B,CAAxBC,OAAwB,MAAxBA,OAAwB,CAAZC,KAAY,0DACtD,mBACE,oBAAC,WAAD,gBAAa,EAAE,CAAEH,IAAjB,EAA2BG,KAA3B,EACGF,IADH,KACUC,OADV,CADF,CAKD,CAND,CAoDA,cAAeH,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n} from 'styled-system';\nimport { base, themed } from '../Base';\n\nconst LinkWrapper = styled(Link)(\n  base,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  themed('TextLink')\n);\n\nconst TextLink = ({ link, icon, content, ...props }) => {\n  return (\n    <LinkWrapper to={link} {...props}>\n      {icon} {content}\n    </LinkWrapper>\n  );\n};\n\nTextLink.propTypes = {\n  /** Add here link path. */\n  link: PropTypes.string,\n  /** Add here your content Or any component. */\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  fontFamily: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  fontWeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  textAlign: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  lineHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  letterSpacing: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  ...base.propTypes,\n};\n\nexport default TextLink;\n"]},"metadata":{},"sourceType":"module"}