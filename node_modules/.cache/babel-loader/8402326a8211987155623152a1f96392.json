{"ast":null,"code":"import \"antd/es/upload/style/css\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/var/www/html/ami/src/container/Auth/Muthowif/SignUpForm.js\";\nimport React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\nimport { MdLockOpen } from 'react-icons/md';\nimport { UploadOutlined } from '@ant-design/icons';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport { AuthContext } from 'context/AuthProvider';\nimport { FieldWrapper, SwitchWrapper, Label } from '../Auth.style';\nexport default (() => {\n  var _errors$username, _errors$email, _errors$email2, _errors$telp, _errors$telp2, _errors$alamat, _errors$password, _errors$password2, _errors$password3, _errors$foto, _errors$foto2;\n\n  const _useContext = useContext(AuthContext),\n        signUp = _useContext.signUp,\n        loggedIn = _useContext.loggedIn;\n\n  const _useForm = useForm({\n    mode: 'onChange'\n  }),\n        control = _useForm.control,\n        watch = _useForm.watch,\n        errors = _useForm.errors,\n        handleSubmit = _useForm.handleSubmit;\n\n  const password = watch('password');\n  const confirmPassword = watch('confirmPassword');\n\n  const onSubmit = data => {\n    signUp(data);\n  };\n\n  if (loggedIn) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Nama Lengkap\",\n    htmlFor: \"namalengkap\",\n    error: errors.username && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.type) === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"This field is required!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }),\n    id: \"namalengkap\",\n    name: \"namalengkap\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Email\",\n    htmlFor: \"email\",\n    error: errors.email && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"This field is required!\"), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'pattern' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Please enter a valid email address!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }),\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true,\n      pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"No telepon\",\n    htmlFor: \"telp\",\n    error: errors.telp && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$telp = errors.telp) === null || _errors$telp === void 0 ? void 0 : _errors$telp.type) === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"This field is required!\"), ((_errors$telp2 = errors.telp) === null || _errors$telp2 === void 0 ? void 0 : _errors$telp2.type) === 'pattern' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Please enter a valid email address!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }),\n    type: \"telp\",\n    id: \"telp\",\n    name: \"telp\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Alamat Lengkap\",\n    htmlFor: \"alamat\",\n    error: errors.alamat && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$alamat = errors.alamat) === null || _errors$alamat === void 0 ? void 0 : _errors$alamat.type) === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"This field is required!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }),\n    id: \"alamat\",\n    name: \"alamat\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Sandi\",\n    htmlFor: \"password\",\n    error: errors.password && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"This field is required!\"), ((_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.type) === 'minLength' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"Password must be at lest 6 characters!\"), ((_errors$password3 = errors.password) === null || _errors$password3 === void 0 ? void 0 : _errors$password3.type) === 'maxLength' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Password must not be longer than 20 characters!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }),\n    defaultValue: \"\",\n    control: control,\n    id: \"password\",\n    name: \"password\",\n    rules: {\n      required: true,\n      minLength: 6,\n      maxLength: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Ulangi Sandi\",\n    htmlFor: \"confirmPassword\",\n    error: confirmPassword && password !== confirmPassword && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, \"Your password is not same!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }),\n    defaultValue: \"\",\n    control: control,\n    id: \"confirmPassword\",\n    name: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Foto\",\n    htmlFor: \"foto\",\n    error: errors.foto && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$foto = errors.foto) === null || _errors$foto === void 0 ? void 0 : _errors$foto.type) === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"This field is required!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Upload, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      icon: /*#__PURE__*/React.createElement(UploadOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, \"Unggah\")),\n    id: \"foto\",\n    name: \"foto\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Sertifikat\",\n    htmlFor: \"foto\",\n    error: errors.foto && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$foto2 = errors.foto) === null || _errors$foto2 === void 0 ? void 0 : _errors$foto2.type) === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, \"This field is required!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Upload, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      icon: /*#__PURE__*/React.createElement(UploadOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, \"Unggah\")),\n    id: \"foto\",\n    name: \"foto\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Button, {\n    className: \"signin-btn\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }, \"Daftar Sekarang\"));\n});","map":{"version":3,"sources":["/var/www/html/ami/src/container/Auth/Muthowif/SignUpForm.js"],"names":["React","useContext","Redirect","useForm","Controller","MdLockOpen","UploadOutlined","FormControl","AuthContext","FieldWrapper","SwitchWrapper","Label","signUp","loggedIn","mode","control","watch","errors","handleSubmit","password","confirmPassword","onSubmit","data","pathname","username","type","required","email","pattern","telp","alamat","minLength","maxLength","foto","width"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\nimport { MdLockOpen } from 'react-icons/md';\nimport { Input, Upload, Button } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport { AuthContext } from 'context/AuthProvider';\nimport { FieldWrapper, SwitchWrapper, Label } from '../Auth.style';\n\nexport default () => {\n  const { signUp, loggedIn } = useContext(AuthContext);\n  const { control, watch, errors, handleSubmit } = useForm({\n    mode: 'onChange',\n  });\n  const password = watch('password');\n  const confirmPassword = watch('confirmPassword');\n  const onSubmit = (data) => {\n    signUp(data);\n  };\n  if (loggedIn) {\n    return <Redirect to={{ pathname: '/' }} />;\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl\n        label=\"Nama Lengkap\"\n        htmlFor=\"namalengkap\"\n        error={\n          errors.username && (\n            <>\n              {errors.username?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={<Input />}\n          id=\"namalengkap\"\n          name=\"namalengkap\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n          }}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Email\"\n        htmlFor=\"email\"\n        error={\n          errors.email && (\n            <>\n              {errors.email?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n              {errors.email?.type === 'pattern' && (\n                <span>Please enter a valid email address!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={<Input />}\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n            pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n          }}\n        />\n      </FormControl>\n      <FormControl\n        label=\"No telepon\"\n        htmlFor=\"telp\"\n        error={\n          errors.telp && (\n            <>\n              {errors.telp?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n              {errors.telp?.type === 'pattern' && (\n                <span>Please enter a valid email address!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={<Input />}\n          type=\"telp\"\n          id=\"telp\"\n          name=\"telp\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n          }}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Alamat Lengkap\"\n        htmlFor=\"alamat\"\n        error={\n          errors.alamat && (\n            <>\n              {errors.alamat?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={<Input />}\n          id=\"alamat\"\n          name=\"alamat\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n          }}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Sandi\"\n        htmlFor=\"password\"\n        error={\n          errors.password && (\n            <>\n              {errors.password?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n              {errors.password?.type === 'minLength' && (\n                <span>Password must be at lest 6 characters!</span>\n              )}\n              {errors.password?.type === 'maxLength' && (\n                <span>Password must not be longer than 20 characters!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={<Input.Password />}\n          defaultValue=\"\"\n          control={control}\n          id=\"password\"\n          name=\"password\"\n          rules={{ required: true, minLength: 6, maxLength: 20 }}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Ulangi Sandi\"\n        htmlFor=\"confirmPassword\"\n        error={\n          confirmPassword &&\n          password !== confirmPassword && (\n            <span>Your password is not same!</span>\n          )\n        }\n      >\n        <Controller\n          as={<Input.Password />}\n          defaultValue=\"\"\n          control={control}\n          id=\"confirmPassword\"\n          name=\"confirmPassword\"\n        />\n      </FormControl>\n      <FormControl\n        label=\"Foto\"\n        htmlFor=\"foto\"\n        error={\n          errors.foto && (\n            <>\n              {errors.foto?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={  \n            <Upload>\n              <Button icon={<UploadOutlined />}>Unggah</Button>\n            </Upload>\n          }\n          id=\"foto\"\n          name=\"foto\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n          }}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Sertifikat\"\n        htmlFor=\"foto\"\n        error={\n          errors.foto && (\n            <>\n              {errors.foto?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={  \n            <Upload>\n              <Button icon={<UploadOutlined />}>Unggah</Button>\n            </Upload>\n          }\n          id=\"foto\"\n          name=\"foto\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n          }}\n        />\n      </FormControl>\n      {/* <FieldWrapper>\n        <SwitchWrapper>\n          <Controller\n            as={<Switch />}\n            name=\"rememberMe\"\n            defaultValue={false}\n            valueName=\"checked\"\n            control={control}\n          />\n          <Label>Remember Me</Label>\n        </SwitchWrapper>\n        <SwitchWrapper>\n          <Controller\n            as={<Switch />}\n            name=\"termsAndConditions\"\n            defaultValue={false}\n            valueName=\"checked\"\n            control={control}\n          />\n          <Label>I agree with terms and conditions</Label>\n        </SwitchWrapper>\n      </FieldWrapper> */}\n      <Button\n        className=\"signin-btn\"\n        type=\"primary\"\n        htmlType=\"submit\"\n        size=\"large\"\n        style={{ width: '100%' }}\n      >\n        Daftar Sekarang\n      </Button>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}