{"ast":null,"code":"export function mapDataHelper(infoValue){const tempMapObj={};const tempMapArray=[];if(infoValue&&infoValue.length!==0){infoValue.map(({place_id,address_components,formatted_address,geometry:{location}})=>{let id='';let lat='';let lng='';let formattedAddress='';let city='';let state_long='';let state_short='';let zipcode='';let country_long='';let country_short='';id=place_id;lat=location.lat();lng=location.lng();formattedAddress=formatted_address;if(address_components){for(let i=0;i<address_components.length;i++){if(address_components[i].types.length){switch(address_components[i].types[0]){case'locality':city=address_components[i].long_name;break;case'administrative_area_level_1':state_long=address_components[i].long_name;state_short=address_components[i].short_name;break;case'country':country_long=address_components[i].long_name;country_short=address_components[i].short_name;break;case'postal_code':zipcode=address_components[i].long_name;break;default:break;}}}}tempMapObj.id=id;tempMapObj.lat=lat;tempMapObj.lng=lng;tempMapObj.formattedAddress=formattedAddress;tempMapObj.city=city;tempMapObj.state_short=state_short;tempMapObj.state_long=state_long;tempMapObj.zipcode=zipcode;tempMapObj.country_short=country_short;tempMapObj.country_long=country_long;tempMapArray.push(tempMapObj);return tempMapArray;});}return tempMapArray;}","map":{"version":3,"sources":["/var/www/html/ami/src/components/Map/mapDataHelper.js"],"names":["mapDataHelper","infoValue","tempMapObj","tempMapArray","length","map","place_id","address_components","formatted_address","geometry","location","id","lat","lng","formattedAddress","city","state_long","state_short","zipcode","country_long","country_short","i","types","long_name","short_name","push"],"mappings":"AAAA,MAAO,SAASA,CAAAA,aAAT,CAAuBC,SAAvB,CAAkC,CACvC,KAAMC,CAAAA,UAAU,CAAG,EAAnB,CACA,KAAMC,CAAAA,YAAY,CAAG,EAArB,CAEA,GAAIF,SAAS,EAAIA,SAAS,CAACG,MAAV,GAAqB,CAAtC,CAAyC,CACvCH,SAAS,CAACI,GAAV,CACE,CAAC,CACCC,QADD,CAECC,kBAFD,CAGCC,iBAHD,CAICC,QAAQ,CAAE,CAAEC,QAAF,CAJX,CAAD,GAKM,CACJ,GAAIC,CAAAA,EAAE,CAAG,EAAT,CACA,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACA,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACA,GAAIC,CAAAA,gBAAgB,CAAG,EAAvB,CACA,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CACA,GAAIC,CAAAA,aAAa,CAAG,EAApB,CAEAT,EAAE,CAAGL,QAAL,CACAM,GAAG,CAAGF,QAAQ,CAACE,GAAT,EAAN,CACAC,GAAG,CAAGH,QAAQ,CAACG,GAAT,EAAN,CACAC,gBAAgB,CAAGN,iBAAnB,CACA,GAAID,kBAAJ,CAAwB,CACtB,IAAK,GAAIc,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGd,kBAAkB,CAACH,MAAvC,CAA+CiB,CAAC,EAAhD,CAAoD,CAClD,GAAId,kBAAkB,CAACc,CAAD,CAAlB,CAAsBC,KAAtB,CAA4BlB,MAAhC,CAAwC,CACtC,OAAQG,kBAAkB,CAACc,CAAD,CAAlB,CAAsBC,KAAtB,CAA4B,CAA5B,CAAR,EACE,IAAK,UAAL,CACEP,IAAI,CAAGR,kBAAkB,CAACc,CAAD,CAAlB,CAAsBE,SAA7B,CACA,MACF,IAAK,6BAAL,CACEP,UAAU,CAAGT,kBAAkB,CAACc,CAAD,CAAlB,CAAsBE,SAAnC,CACAN,WAAW,CAAGV,kBAAkB,CAACc,CAAD,CAAlB,CAAsBG,UAApC,CACA,MACF,IAAK,SAAL,CACEL,YAAY,CAAGZ,kBAAkB,CAACc,CAAD,CAAlB,CAAsBE,SAArC,CACAH,aAAa,CAAGb,kBAAkB,CAACc,CAAD,CAAlB,CAAsBG,UAAtC,CACA,MACF,IAAK,aAAL,CACEN,OAAO,CAAGX,kBAAkB,CAACc,CAAD,CAAlB,CAAsBE,SAAhC,CACA,MACF,QACE,MAhBJ,CAkBD,CACF,CACF,CAEDrB,UAAU,CAACS,EAAX,CAAgBA,EAAhB,CACAT,UAAU,CAACU,GAAX,CAAiBA,GAAjB,CACAV,UAAU,CAACW,GAAX,CAAiBA,GAAjB,CACAX,UAAU,CAACY,gBAAX,CAA8BA,gBAA9B,CACAZ,UAAU,CAACa,IAAX,CAAkBA,IAAlB,CACAb,UAAU,CAACe,WAAX,CAAyBA,WAAzB,CACAf,UAAU,CAACc,UAAX,CAAwBA,UAAxB,CACAd,UAAU,CAACgB,OAAX,CAAqBA,OAArB,CACAhB,UAAU,CAACkB,aAAX,CAA2BA,aAA3B,CACAlB,UAAU,CAACiB,YAAX,CAA0BA,YAA1B,CACAhB,YAAY,CAACsB,IAAb,CAAkBvB,UAAlB,EACA,MAAOC,CAAAA,YAAP,CACD,CA3DH,EA6DD,CAED,MAAOA,CAAAA,YAAP,CACD","sourcesContent":["export function mapDataHelper(infoValue) {\n  const tempMapObj = {};\n  const tempMapArray = [];\n\n  if (infoValue && infoValue.length !== 0) {\n    infoValue.map(\n      ({\n        place_id,\n        address_components,\n        formatted_address,\n        geometry: { location },\n      }) => {\n        let id = '';\n        let lat = '';\n        let lng = '';\n        let formattedAddress = '';\n        let city = '';\n        let state_long = '';\n        let state_short = '';\n        let zipcode = '';\n        let country_long = '';\n        let country_short = '';\n\n        id = place_id;\n        lat = location.lat();\n        lng = location.lng();\n        formattedAddress = formatted_address;\n        if (address_components) {\n          for (let i = 0; i < address_components.length; i++) {\n            if (address_components[i].types.length) {\n              switch (address_components[i].types[0]) {\n                case 'locality':\n                  city = address_components[i].long_name;\n                  break;\n                case 'administrative_area_level_1':\n                  state_long = address_components[i].long_name;\n                  state_short = address_components[i].short_name;\n                  break;\n                case 'country':\n                  country_long = address_components[i].long_name;\n                  country_short = address_components[i].short_name;\n                  break;\n                case 'postal_code':\n                  zipcode = address_components[i].long_name;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n\n        tempMapObj.id = id;\n        tempMapObj.lat = lat;\n        tempMapObj.lng = lng;\n        tempMapObj.formattedAddress = formattedAddress;\n        tempMapObj.city = city;\n        tempMapObj.state_short = state_short;\n        tempMapObj.state_long = state_long;\n        tempMapObj.zipcode = zipcode;\n        tempMapObj.country_short = country_short;\n        tempMapObj.country_long = country_long;\n        tempMapArray.push(tempMapObj);\n        return tempMapArray;\n      }\n    );\n  }\n\n  return tempMapArray;\n}\n"]},"metadata":{},"sourceType":"module"}