{"ast":null,"code":"import _slicedToArray from\"/var/www/html/ami-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';function getSize(){return{innerHeight:window.innerHeight,innerWidth:window.innerWidth,outerHeight:window.outerHeight,outerWidth:window.outerWidth};}const useWindowSize=()=>{let _useState=useState(getSize()),_useState2=_slicedToArray(_useState,2),windowSize=_useState2[0],setWindowSize=_useState2[1];function handleResize(){setWindowSize(getSize());}useEffect(()=>{window.addEventListener('resize',handleResize);return()=>{window.removeEventListener('resize',handleResize);};},[]);return windowSize;};export default useWindowSize;","map":{"version":3,"sources":["/var/www/html/ami-travel/src/components/StickyBooking/useWindowSize.js"],"names":["useState","useEffect","getSize","innerHeight","window","innerWidth","outerHeight","outerWidth","useWindowSize","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener"],"mappings":"+IAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,QAASC,CAAAA,OAAT,EAAmB,CACjB,MAAO,CACLC,WAAW,CAAEC,MAAM,CAACD,WADf,CAELE,UAAU,CAAED,MAAM,CAACC,UAFd,CAGLC,WAAW,CAAEF,MAAM,CAACE,WAHf,CAILC,UAAU,CAAEH,MAAM,CAACG,UAJd,CAAP,CAMD,CAED,KAAMC,CAAAA,aAAa,CAAG,IAAM,eACQR,QAAQ,CAACE,OAAO,EAAR,CADhB,wCACrBO,UADqB,eACTC,aADS,eAG1B,QAASC,CAAAA,YAAT,EAAwB,CACtBD,aAAa,CAACR,OAAO,EAAR,CAAb,CACD,CAEDD,SAAS,CAAC,IAAM,CACdG,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,CAAkCD,YAAlC,EACA,MAAO,IAAM,CACXP,MAAM,CAACS,mBAAP,CAA2B,QAA3B,CAAqCF,YAArC,EACD,CAFD,CAGD,CALQ,CAKN,EALM,CAAT,CAOA,MAAOF,CAAAA,UAAP,CACD,CAfD,CAiBA,cAAeD,CAAAA,aAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction getSize() {\n  return {\n    innerHeight: window.innerHeight,\n    innerWidth: window.innerWidth,\n    outerHeight: window.outerHeight,\n    outerWidth: window.outerWidth,\n  };\n}\n\nconst useWindowSize = () => {\n  let [windowSize, setWindowSize] = useState(getSize());\n\n  function handleResize() {\n    setWindowSize(getSize());\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return windowSize;\n};\n\nexport default useWindowSize;\n"]},"metadata":{},"sourceType":"module"}