{"ast":null,"code":"import _objectWithoutProperties from\"/var/www/html/ami/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import styled from'styled-components';import{fontFamily,fontWeight,textAlign,lineHeight,letterSpacing}from'styled-system';import{base,themed}from'../Base';const LabelWrapper=styled('label')(base,fontFamily,fontWeight,textAlign,lineHeight,letterSpacing,themed('Heading'));const HtmlLabel=(_ref)=>{let htmlFor=_ref.htmlFor,content=_ref.content,props=_objectWithoutProperties(_ref,[\"htmlFor\",\"content\"]);return/*#__PURE__*/React.createElement(LabelWrapper,Object.assign({htmlFor:htmlFor},props),content);};export default HtmlLabel;","map":{"version":3,"sources":["/var/www/html/ami/src/components/UI/HtmlLabel/HtmlLabel.js"],"names":["React","styled","fontFamily","fontWeight","textAlign","lineHeight","letterSpacing","base","themed","LabelWrapper","HtmlLabel","htmlFor","content","props"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OACEC,UADF,CAEEC,UAFF,CAGEC,SAHF,CAIEC,UAJF,CAKEC,aALF,KAMO,eANP,CAOA,OAASC,IAAT,CAAeC,MAAf,KAA6B,SAA7B,CAEA,KAAMC,CAAAA,YAAY,CAAGR,MAAM,CAAC,OAAD,CAAN,CACnBM,IADmB,CAEnBL,UAFmB,CAGnBC,UAHmB,CAInBC,SAJmB,CAKnBC,UALmB,CAMnBC,aANmB,CAOnBE,MAAM,CAAC,SAAD,CAPa,CAArB,CAUA,KAAME,CAAAA,SAAS,CAAG,QAAoC,IAAjCC,CAAAA,OAAiC,MAAjCA,OAAiC,CAAxBC,OAAwB,MAAxBA,OAAwB,CAAZC,KAAY,sDACpD,mBACE,oBAAC,YAAD,gBAAc,OAAO,CAAEF,OAAvB,EAAoCE,KAApC,EACGD,OADH,CADF,CAKD,CAND,CAiDA,cAAeF,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n} from 'styled-system';\nimport { base, themed } from '../Base';\n\nconst LabelWrapper = styled('label')(\n  base,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  themed('Heading')\n);\n\nconst HtmlLabel = ({ htmlFor, content, ...props }) => {\n  return (\n    <LabelWrapper htmlFor={htmlFor} {...props}>\n      {content}\n    </LabelWrapper>\n  );\n};\n\nHtmlLabel.propTypes = {\n  htmlFor: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  fontFamily: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  fontWeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  textAlign: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  lineHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  letterSpacing: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  ...base.propTypes,\n};\n\nexport default HtmlLabel;\n"]},"metadata":{},"sourceType":"module"}