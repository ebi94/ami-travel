{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import ImageCardWrapper,{ContentWrapper,Title,Meta}from'./ImageCard.style';const ImageCard=({className,imageSrc,title,link,meta})=>{// Add all classs to an array\nconst addAllClasses=['image_card'];// className prop checking\nif(className){addAllClasses.push(className);}return/*#__PURE__*/React.createElement(ImageCardWrapper,{className:addAllClasses.join(' ')},/*#__PURE__*/React.createElement(Link,{to:link},/*#__PURE__*/React.createElement(\"img\",{src:imageSrc,alt:title}),/*#__PURE__*/React.createElement(ContentWrapper,null,title&&/*#__PURE__*/React.createElement(Title,null,title),meta&&/*#__PURE__*/React.createElement(Meta,null,meta))));};ImageCard.defaultProps={link:'#'};export default ImageCard;","map":{"version":3,"sources":["/var/www/html/ami/src/components/ImageCard/ImageCard.js"],"names":["React","Link","ImageCardWrapper","ContentWrapper","Title","Meta","ImageCard","className","imageSrc","title","link","meta","addAllClasses","push","join","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,KAAqB,kBAArB,CAEA,MAAOC,CAAAA,gBAAP,EACEC,cADF,CAEEC,KAFF,CAGEC,IAHF,KAIO,mBAJP,CAMA,KAAMC,CAAAA,SAAS,CAAG,CAAC,CAAEC,SAAF,CAAaC,QAAb,CAAuBC,KAAvB,CAA8BC,IAA9B,CAAoCC,IAApC,CAAD,GAAgD,CAChE;AACA,KAAMC,CAAAA,aAAa,CAAG,CAAC,YAAD,CAAtB,CAEA;AACA,GAAIL,SAAJ,CAAe,CACbK,aAAa,CAACC,IAAd,CAAmBN,SAAnB,EACD,CAED,mBACE,oBAAC,gBAAD,EAAkB,SAAS,CAAEK,aAAa,CAACE,IAAd,CAAmB,GAAnB,CAA7B,eACE,oBAAC,IAAD,EAAM,EAAE,CAAEJ,IAAV,eACE,2BAAK,GAAG,CAAEF,QAAV,CAAoB,GAAG,CAAEC,KAAzB,EADF,cAEE,oBAAC,cAAD,MACGA,KAAK,eAAI,oBAAC,KAAD,MAAQA,KAAR,CADZ,CAEGE,IAAI,eAAI,oBAAC,IAAD,MAAOA,IAAP,CAFX,CAFF,CADF,CADF,CAWD,CApBD,CA8BAL,SAAS,CAACS,YAAV,CAAyB,CACvBL,IAAI,CAAE,GADiB,CAAzB,CAIA,cAAeJ,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport ImageCardWrapper, {\n  ContentWrapper,\n  Title,\n  Meta,\n} from './ImageCard.style';\n\nconst ImageCard = ({ className, imageSrc, title, link, meta }) => {\n  // Add all classs to an array\n  const addAllClasses = ['image_card'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <ImageCardWrapper className={addAllClasses.join(' ')}>\n      <Link to={link}>\n        <img src={imageSrc} alt={title} />\n        <ContentWrapper>\n          {title && <Title>{title}</Title>}\n          {meta && <Meta>{meta}</Meta>}\n        </ContentWrapper>\n      </Link>\n    </ImageCardWrapper>\n  );\n};\n\nImageCard.propTypes = {\n  className: PropTypes.string,\n  imageSrc: PropTypes.string,\n  title: PropTypes.string,\n  link: PropTypes.string,\n  meta: PropTypes.string,\n};\n\nImageCard.defaultProps = {\n  link: '#',\n};\n\nexport default ImageCard;\n"]},"metadata":{},"sourceType":"module"}